{"version":3,"sources":["webpack://iptv/webpack/universalModuleDefinition","webpack://iptv/./index.js","webpack://iptv/(webpack)/buildin/module.js","webpack://iptv/webpack/bootstrap"],"names":["root","factory","exports","module","define","amd","this","window","iptv","ready","dialogs","Dialog","setings","that","index","config","extend","skin","document","body","creat","setTimeout","IMGLoad","__nativeSI__","all","setInterval","isPolyfill","vCallback","nDelay","aArgs","Array","prototype","slice","call","arguments","Function","apply","imgCount","imgIndex","imgs","imgTimer","callBack","ImgLoadSuss","obj_","callBack_","this_","isArray","length","push","th","i","complete","undefined","loadOk","clearInterval","core_strundefined","location","docElem","documentElement","_iptv","_$","$","class2type","core_version","core_deletedIds","core_concat","concat","core_push","core_slice","core_indexOf","indexOf","core_toString","toString","core_hasOwn","hasOwnProperty","core_trim","trim","quickExpr","rtrim","rnothtmlwhite","rmsPrefix","rdashAlpha","rmultiDash","rbrace","rvalidchars","rvalidbraces","rvalidescape","rvalidtokens","fcamelCase","letter","toUpperCase","selector","context","fn","init","getsec","sec","str1","substring","str2","isEmptyDataObject","obj","name","isEmptyObject","internalData","elem","data","pvt","ret","thisCache","internalKey","expando","isNode","nodeType","cache","id","guid","toJSON","noop","camelCase","internalRemoveData","map","split","dataAttr","key","replace","toLowerCase","getAttribute","test","parseJSON","e","createXHR","XMLHttpRequest","ActiveXObject","version","constructor","ele","eles","match","exec","getElementById","getElementsByClassName","each","value","getElementsByName","isFunction","type","merge","toArray","get","num","callback","args","sort","splice","src","copyIsArray","copy","options","clone","target","deep","isPlainObject","noConflict","Math","random","string","$0","isWindow","isNumeric","isNaN","parseFloat","isFinite","String","support","ownLast","isArraylike","error","msg","Error","text","firstCase","urlDelParam","url_","pattern","eval","encodeURIComponent","urlDispose","replaceText","ex","uri","host","globalEval","execScript","nodeName","elems","arg","first","second","l","j","now","Date","getTime","isReady","callback_","browser","b3","b4","navigator","appName","isNull","isNotNull","style","getContextName","curWwwPath","href","pathName","pathname","pos","substr","getHostPath","lastIndexOf","getContextPath","t1","sname","params","arr","join","keyCode","evt","event","which","formatStr","str","STBType","Authentication","CTCGetConfig","rangeNum","Min","Max","include","floor","daysBetween","DateOne","DateTwo","OneMonth","OneDay","OneYear","TwoMonth","TwoDay","TwoYear","cha","parse","abs","getServerDate","date","serverTimestamp","parseInt","setCookie","timestr","exp2","t","setTime","cookie","escape","toGMTString","getCookie","RegExp","s","unescape","delCookie","exp","requestValue","d","url","defaultValue","b","f","c","a","g","show","hide","html","addClass","className","removeClass","JSON","parseXML","xml","DOMParser","parseFromString","async","loadXML","getElementsByTagName","parseDOM","xmlDoc","isLeapYear","getYear","Format","getFullYear","month","getMonth","getDay","getDate","getHours","getMinutes","getSeconds","DateAdd","strInterval","Number","dtTmp","myDate","myArray","DatePart","interval","partStr","WeekNumOfYear","innerHTML","attr","getStyle","hasClass","toggleClass","addEventListener","types","func","attachEvent","removeEventListener","detachEvent","one","callee","setCss","setCss3","objAttr","contains","currentStyle","getComputedStyle","getPropertyValue","getAttr","setAttr","setAttribute","remove","removeData","parentNode","removeChild","width","height","hasData","_data","_removeData","attrs","attributes","tl","br","margin","ajax","method","success","postData","xhr","open","setRequestHeader","send","onreadystatechange","responseObj","readyState","status","responseText","code","ErrorLoginFailUrl","ErrorServerFailUrl","statusText","shade","winWidth","winHeight","end","anim","pt","time","zIndex","maxWidth","fixed","isOutAnim","icon","title","area","offset","tips","start","animClass","times","content","conType","closeAll","follow","parent","tipsMore","vessel","shadeHTML","contentHTML","appendChild","dialog","auto","close","setHeight","titHeight","outerWidth","innerWidth","innerHeight","outerHeight","offsetTop","offsetLeft","top","left","titleHTML","createElement","position","ceil","is","layArea","goal","tipsG","guide","parentHeight","parentWidth","autoLeft","tipLeft","right","where","tipTop","getDialog","othis","dlg","console","loadImg","Image","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","installedModules","__webpack_require__","m","modules","getter","o","r","Symbol","toStringTag","mode","__esModule","ns","create","bind","n","object","property","p","moduleId"],"mappings":"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","file":"iptv-core-1.0.2.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"iptv\"] = factory();\n\telse\n\t\troot[\"iptv\"] = factory();\n})(this, function() {\nreturn ","(function (window, undefined) {\r\n    var\r\n        // 将 undefined 转换为字符串 \"undefined\"\r\n        core_strundefined = typeof undefined,\r\n\r\n        location = window.location,\r\n        document = window.document,\r\n        docElem = document.documentElement,\r\n\r\n        //设置别名\r\n        _iptv = window.iptv,\r\n        _$ = window.$,\r\n\r\n        // 储存了常见类型的 typeof 的哈希表\r\n        //{\"[object Function]\":\"function\",\"[object Boolean]\":\"boolean\",}\r\n        class2type = {},\r\n        // 定义当前版本\r\n        core_version = '1.0.3',\r\n        // 其次，这里定义了一个空的数组对象 ，如果下文行文需要调用数组对象的 concat 、push 、slice 、indexOf 方法\r\n        // 将会调用 core_concat 、core_push 、core_slice 、和 core_indexOf ，这四个变量事先存储好了这四个方法的入口\r\n        // 同时使用 call 或 apply 调用这些方法也可以使类数组也能用到数组的方法\r\n        core_deletedIds = [],\r\n        core_concat = core_deletedIds.concat,\r\n        core_push = core_deletedIds.push,\r\n        core_slice = core_deletedIds.slice,\r\n        core_indexOf = core_deletedIds.indexOf,\r\n\r\n        core_toString = class2type.toString,\r\n        //hasOwnProperty:返回boolean值，参数是字符串，用于检查某对象是否存在该字符串的属性，该方法不会检查对象的原型链中是否存在该属性\r\n        //var a = {name:\"n\"}; a.hasOwnProperty(\"name\");return true\r\n        core_hasOwn = class2type.hasOwnProperty,\r\n        core_trim = core_version.trim,\r\n        //匹配开头#&.号的任意字符，包括下划线与-\r\n        quickExpr = /(^[#&.])([\\w-]+)$/,\r\n        rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\r\n        //匹配空格或者空白字符\r\n        rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g,\r\n        // 匹配 -ms- 前缀\r\n        ///^-ms-/,\r\n        rmsPrefix = /^(-ms-)|(-webkit-)|(-moz-)|(-o-)|(-khtml-)/,\r\n        // [\\da-z] 表示任意英文字母或者数字\r\n        rdashAlpha = /-([\\da-z])/gi,\r\n        // 匹配大写字母\r\n        rmultiDash = /([A-Z])/g,\r\n        // 匹配 json字符串{任意字符*} 或者 [任意字符*]\r\n        rbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\r\n        rvalidchars = /^[\\],:{}\\s]*$/,\r\n        rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g,\r\n        rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,\r\n        rvalidtokens = /\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d+\\.|)\\d+(?:[eE][+-]?\\d+|)/g,\r\n        fcamelCase = function (all, letter) {\r\n            return letter.toUpperCase();\r\n        },\r\n        //定义iptv构造函数\r\n        iptv = function (selector, context) {\r\n            return new iptv.fn.init(selector, context);\r\n        };\r\n    // 给 iptv.prototype 设置别名 iptv.fn\r\n    // iptv.prototype 即是 iptv的原型，挂载在 iptv.prototype 上的方法，即可让所有 iptv 对象使用\r\n    iptv.fn = iptv.prototype = {\r\n        // 当前版本\r\n        iptv: core_version,\r\n        constructor: iptv,\r\n        /**\r\n         * 初始化方法\r\n         */\r\n        init: function (selector, context) {\r\n            // 如果传入的参数为空，则直接返回that\r\n            var that = this;\r\n            if (!selector) {\r\n                return that;\r\n            }\r\n            var match;\r\n            if (typeof selector == \"string\") {\r\n                match = quickExpr.exec(selector);\r\n                //处理id DOM\r\n                if (match && match[1] === \"#\") {\r\n                    var ele = document.getElementById(match[2]);\r\n                    that[0] = ele;\r\n                    that.length = 1;\r\n                    that.selector = match[0];\r\n                    that.id = match[2];\r\n                } else if (match && match[1] === \".\") {\r\n                    var eles = document.getElementsByClassName(match[2]) || [];\r\n                    iptv.each(eles, function (index, value) {\r\n                        that[index] = value;\r\n                    });\r\n                    that.length = eles.length;\r\n                    that.selector = match[0];\r\n                } else if (selector === \"body\") {\r\n                    that[0] = document.body || document.getElementsByName(selector);\r\n                    that.selector = selector;\r\n                }\r\n                that.context = document;\r\n                return that;\r\n            } else if (selector.nodeType == 1) {\r\n                that.context = that[0] = selector;\r\n                that.length = 1;\r\n                return that;\r\n            } else if (iptv.isFunction(selector)) {\r\n                return iptv.ready(selector);\r\n            }\r\n\r\n            //匹配选择器里嵌套了一个选择器\r\n            // $($('#container')) 相当于 $('#container')\r\n            if (selector.selector && selector.context) {\r\n                return iptv(selector.selector, selector.context);\r\n            }\r\n\r\n            //匹配选择器里嵌套了一个没有selector属性的iptv对象\r\n            //$($(dom)) 相当于 $(dom)\r\n            if (selector[0] && selector.context) {\r\n                return iptv(selector[0]);\r\n            }\r\n\r\n            if (iptv.type(selector) === \"object\") {\r\n                that.context = that[0] = selector;\r\n                that.length = 1;\r\n                return that;\r\n            }\r\n\r\n            if (iptv.type(selector) === \"array\") {\r\n                that.context = selector;\r\n                that.length = 0;\r\n                iptv.merge(that, selector);\r\n                return that;\r\n            }\r\n            return that;\r\n        },\r\n        /**\r\n         * 当前操作的上下文对象\r\n         */\r\n        context: null,\r\n        /**\r\n         * 当前的选择器\r\n         */\r\n        selector: \"\",\r\n        /**\r\n         * 将 iptv 对象转换成数组类型，这里返回的结果就真的是 Array 类型了\r\n         * 相当于 Array.prototype.slice.call(this)\r\n         * @returns {*}\r\n         */\r\n        toArray: function () {\r\n            return core_slice.call(this);\r\n        },\r\n        /**\r\n         * 如果 num 不为 null ，将返回索引为 num 的元素\r\n         * （否则）返回索引为 num 的 jQuery 对象\r\n         * 当 num 为负数的时候，相当于从数组尾巴倒数索引\r\n         * @param num int\r\n         * @returns {*}\r\n         */\r\n        get: function (num) {\r\n            return num == null ?\r\n                this.toArray() :\r\n                // 负数即是可以反向选取\r\n                (num < 0 ? this[this.length + num] : this[num]);\r\n        },\r\n        /**\r\n         * 遍历当前数组对象，iptv.length>0时，说明可以遍历\r\n         * @param callback\r\n         * @param args\r\n         * @returns {*}\r\n         */\r\n        each: function (callback, args) {\r\n            return iptv.each(this, callback, args);\r\n        },\r\n        push: core_push,\r\n        sort: [].sort,\r\n        splice: [].splice\r\n\r\n    };\r\n    //重置原型对象为iptv\r\n    iptv.fn.init.prototype = iptv.fn;\r\n\r\n    //不对外方法\r\n    function getsec(sec) {\r\n        var str1 = sec.substring(1, sec.length) * 1;\r\n        var str2 = sec.substring(0, 1);\r\n        if (str2 == \"S\") {\r\n            return str1 * 1000;\r\n        }\r\n        else if (str2 == \"M\") {\r\n            return str1 * 60 * 1000;\r\n        }\r\n        else if (str2 == \"H\") {\r\n            return str1 * 60 * 60 * 1000;\r\n        }\r\n        else if (str2 == \"D\") {\r\n            return str1 * 24 * 60 * 60 * 1000;\r\n        } else {\r\n            return 1 * 24 * 60 * 60 * 1000;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 定义继承方法\r\n     * 如果只有一个参数，target就是iptv类或iptv对象，\r\n     * 如果有2个或多个参数，target就是第一个参数，那么就第2个参数开始之后的所有参数的属性复制到第一个参数上去\r\n     * 如果第一个参数是true，target就是第二个参数，之后的参数的属性就复制到第二个参数去\r\n     * @type {iptv.extend}\r\n     */\r\n    iptv.extend = iptv.fn.extend = function () {\r\n        var src, copyIsArray, copy, name, options, clone,\r\n            target = arguments[0] || {},\r\n            i = 1,\r\n            length = arguments.length,\r\n            deep = false;\r\n\r\n        // target 是传入的第一个参数\r\n        // 如果第一个参数是布尔类型，则表示是否要深递归，\r\n        if (typeof target === \"boolean\") {\r\n            deep = target;\r\n            target = arguments[1] || {};\r\n            // 如果传了类型为 boolean 的第一个参数，i 则从 2 开始\r\n            i = 2;\r\n        }\r\n        // 如果传入的第一个参数是 字符串或者其他\r\n        if (typeof target !== \"object\" && !iptv.isFunction(target)) {\r\n            target = {};\r\n        }\r\n        // 如果参数的长度为 1 ，表示是 iptv 静态方法\r\n        if (length === i) {\r\n            target = this;\r\n            --i;\r\n        }\r\n        // 可以传入多个复制源\r\n        // i 是从 1或2 开始的\r\n        for (; i < length; i++) {\r\n            // 将每个源的属性全部复制到 target 上\r\n            if ((options = arguments[i]) != null) {\r\n                // Extend the base object\r\n                for (name in options) {\r\n                    // src 是源（即本身）的值\r\n                    // copy 是即将要复制过去的值\r\n                    src = target[name];\r\n                    copy = options[name];\r\n                    // 防止有环，例如 extend(true, target, {'target':target});\r\n                    if (target === copy) {\r\n                        continue;\r\n                    }\r\n                    // 如果是深复制\r\n                    if (deep && copy && (iptv.isPlainObject(copy) || (copyIsArray = iptv.isArray(copy)))) {\r\n                        // 数组\r\n                        if (copyIsArray) {\r\n                            copyIsArray = false;\r\n                            clone = src && iptv.isArray(src) ? src : [];\r\n                            // 对象\r\n                        } else {\r\n                            clone = src && iptv.isPlainObject(src) ? src : {};\r\n                        }\r\n                        // 递归\r\n                        target[name] = iptv.extend(deep, clone, copy);\r\n                    } else if (copy !== undefined) {\r\n                        target[name] = copy;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // 也就是如果不传需要覆盖的源，调用 $.extend 其实是增加 iptv 的静态方法\r\n        return target;\r\n    };\r\n\r\n    //添加iptv静态方法\r\n    iptv.extend({\r\n        /**\r\n         * 释放iptv对象引用，防止公共出去的iptv变量造成污染冲突，也可以实现同一个页面有多个iptv库\r\n         * @param deep 如果传true，$与iptv同时交给了该方法的返回值，如果传false或空，只有$变量将交给该方法的返回值\r\n         * @returns {iptv}\r\n         */\r\n        noConflict: function (deep) {\r\n            if (window.$ === iptv) {\r\n                window.$ = _$;\r\n            }\r\n\r\n            if (deep && window.iptv === iptv) {\r\n                window.iptv = _iptv;\r\n            }\r\n            return iptv;\r\n        },\r\n        $: function (id) {\r\n            if (id && iptv.trim(id)) {\r\n                return document.getElementById(iptv.trim(id));\r\n            }\r\n            return null;\r\n        },\r\n        noop: function () {\r\n        },\r\n        /**\r\n         * 随机数\r\n         */\r\n        expando: \"iptv\" + (core_version + Math.random()).replace(/\\D/g, \"\"),\r\n        // 驼峰表示法 例如将 iptv.camelCase(\"-webkit-font-size\"); 变为 \"webkitFontSize\"\r\n        // 在很多需要兼容 IE 的地方用得上，例如 IE678 获取 CSS 样式的时候，使用\r\n        // element.currentStyle.getAttribute(camelCase(style)) 传入的参数必须是驼峰表示法\r\n        camelCase: function (string) {\r\n            return string.replace(rmsPrefix, function ($0) {\r\n                //处理浏览器前缀\r\n                return $0.replace(/-/g, \"\") + \"-\";\r\n            }).replace(rdashAlpha, fcamelCase);\r\n        },\r\n        /**\r\n         * 判断传入对象是否为 function\r\n         * @returns {boolean}\r\n         */\r\n        isFunction: function (obj) {\r\n            return iptv.type(obj) === \"function\";\r\n        },\r\n        /**\r\n         * 判断传入对象是否为数组\r\n         * @returns {boolean}\r\n         */\r\n        isArray: Array.isArray || function (obj) {\r\n            return iptv.type(obj) === \"array\";\r\n        },\r\n        /**\r\n         *  判断传入对象是否为 window 对象\r\n         * @param obj\r\n         * @returns {boolean}\r\n         */\r\n        isWindow: function (obj) {\r\n            return obj != null && obj == obj.window;\r\n        },\r\n        // 确定它的参数是否是一个数字\r\n        isNumeric: function (obj) {\r\n            //isFinite:参数是一个数字，用于判断这个数字是否是无穷大数字，如果是无穷大，返回false，如果数字正常返回true\r\n            return !isNaN(parseFloat(obj)) && isFinite(obj);\r\n        },\r\n\r\n        /**\r\n         * 确定JavaScript 对象的类型\r\n         * @param obj\r\n         * @returns {boolean number string function array date regexp object error}\r\n         */\r\n        type: function (obj) {\r\n            // 如果传入的为 null --> \"null\"\r\n            if (obj == null) {\r\n                return String(obj);\r\n            }\r\n            // 利用事先存好的 hash 表 class2type 作精准判断\r\n            return typeof obj === \"object\" || typeof obj === \"function\" ?\r\n                class2type[core_toString.call(obj)] || \"object\" :\r\n                typeof obj;\r\n        },\r\n        /**\r\n         * 测试对象是否是纯粹的对象\r\n         * 通过 \"{}\" 或者 \"new Object\" 创建的\r\n         * @param obj\r\n         * @returns {Boolean ,Number ,String ,Function ,Array ,Date ,RegExp ,Object ,Error}\r\n         */\r\n        isPlainObject: function (obj) {\r\n            var key;\r\n            if (!obj || iptv.type(obj) !== \"object\" || obj.nodeType || iptv.isWindow(obj)) {\r\n                return false;\r\n            }\r\n\r\n            try {\r\n                if (obj.constructor &&\r\n                    !core_hasOwn.call(obj, \"constructor\") &&\r\n                    !core_hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\r\n                    return false;\r\n                }\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n            if (iptv.support.ownLast) {\r\n                for (key in obj) {\r\n                    return core_hasOwn.call(obj, key);\r\n                }\r\n            }\r\n            for (key in obj) {\r\n            }\r\n\r\n            return key === undefined || core_hasOwn.call(obj, key);\r\n        },\r\n        /**\r\n         * 返回对象是否是数组还是类数组对象\r\n         * @param obj\r\n         * @returns {boolean} true:是数组，false:不是纯数组\r\n         */\r\n        isArraylike: function (obj) {\r\n            var length = obj.length,\r\n                type = iptv.type(obj);\r\n\r\n            if (iptv.isWindow(obj)) {\r\n                return false;\r\n            }\r\n\r\n            if (obj.nodeType === 1 && length) {\r\n                return true;\r\n            }\r\n\r\n            return type === \"array\" || type !== \"function\" && (length === 0 || typeof length === \"number\" && length > 0 && (length - 1) in obj);\r\n        },\r\n        /**\r\n         * 检查对象是否为空（不包含任何属性）\r\n         * @param obj\r\n         * @returns {boolean}\r\n         */\r\n        isEmptyObject: function (obj) {\r\n            var name;\r\n            for (name in obj) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        /**\r\n         * 为 JavaScript 的 \"error\" 事件绑定一个处理函数\r\n         * @param msg 错误描述\r\n         */\r\n        error: function (msg) {\r\n            throw new Error(msg);\r\n        },\r\n        /**\r\n         * 去除前后空格\r\n         * @param text\r\n         * @returns {string}\r\n         */\r\n        trim: function (text) {\r\n            return text == null ? \"\" : (text + \"\").replace(rtrim, \"\");\r\n        },\r\n        /**\r\n         * 字符串首字母大写\r\n         * @param text\r\n         * @returns {*|string|XML|void}\r\n         */\r\n        firstCase: function (text) {\r\n            return text && text.replace(text.substring(0, 1), text.substring(0, 1).toUpperCase());\r\n        },\r\n        urlDelParam: function (url_, key) {\r\n            if (!url_)return \"\";\r\n            var pattern = \"\";\r\n            pattern = eval('/[&]*(?:' + encodeURIComponent(key) + '=[^&]*)/');\r\n            if (pattern.test(url_)) url_ = url_.replace(pattern, '');\r\n            return url_;\r\n        },\r\n        /**\r\n         * url追加或者替换值\r\n         */\r\n        urlDispose: function (url_, obj_) {\r\n            if (!url_)return \"\";\r\n            if (!obj_ || typeof obj_ !== \"object\")return url_;\r\n            var pattern = \"\",\r\n                replaceText = \"\",\r\n                ex = /\\?/.test(url_),\r\n                uri = ex ? url_.replace(/.*\\?/, '') : '',\r\n                host = ex ? url_.replace(/\\?.*/, '') : url_;\r\n            for (var key in obj_) {\r\n                //在这里为什么没有判断obj_[key]如果是空值，就不进行追加或替换呢？因为某些时候，原地址中存在莫值，需要替换为空值，所以没有加此判断\r\n                pattern = eval('/[&]*(?:' + encodeURIComponent(key) + '=[^&]*)/');\r\n                replaceText = encodeURIComponent(key) + '=' + encodeURIComponent(obj_[key]);\r\n                if (pattern.test(uri)) uri = uri.replace(pattern, '');\r\n                uri += \"&\" + replaceText;\r\n            }\r\n            url_ = uri ? host + '?' + uri.replace(/^&/, '') : host;\r\n            return url_;\r\n        },\r\n        /**\r\n         * eval的变异，使用效果一样，只不过是在全局作用域中执行 参数data\r\n         * @param data\r\n         */\r\n        globalEval: function (data) {\r\n            // 如果 data 不为空\r\n            if (data && iptv.trim(data)) {\r\n                (window.execScript || function (data) {\r\n                    // 在chrome一些旧版本里eval.call( window, data )无效\r\n                    window[\"eval\"].call(window, data);\r\n                })(data);\r\n            }\r\n        },\r\n        /**\r\n         * 判断某个DOM是否是指定的name名称\r\n         * iptv.nodeName(document.getElementById(\"h\"),\"h2\")--->return true/false\r\n         * @param elem  DOM节点对象\r\n         * @param name  需要判断的节点名称\r\n         * @returns {boolean}\r\n         */\r\n        nodeName: function (elem, name) {\r\n            return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\r\n        },\r\n        /**\r\n         * 循环数组或对象\r\n         * @param obj\r\n         * @param callback\r\n         * @param args\r\n         * @returns {*}\r\n         */\r\n        each: function (obj, callback, args) {\r\n            if (!obj)return null;\r\n            var value,\r\n                i = 0,\r\n                length = obj.length,\r\n                isArray = iptv.isArraylike(obj); // 判断是不是数组\r\n\r\n            // 传了第三个参数\r\n            if (args) {\r\n                if (isArray) {\r\n                    for (; i < length; i++) {\r\n                        // 相当于:\r\n                        // args = [arg1, arg2, arg3];\r\n                        // callback(args1, args2, args3)。然后callback里边的this指向了obj[i]\r\n                        value = callback.apply(obj[i], args);\r\n\r\n                        if (value === false) {\r\n                            // 注意到，当callback函数返回值会false的时候，注意是全等！循环结束\r\n                            break;\r\n                        }\r\n                    }\r\n                    // 非数组\r\n                } else {\r\n                    for (i in obj) {\r\n                        value = callback.apply(obj[i], args);\r\n\r\n                        if (value === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // 数组\r\n                if (isArray) {\r\n                    for (; i < length; i++) {\r\n                        // 相当于callback(i, obj[i])。然后callback里边的this指向了obj[i]\r\n                        value = callback.call(obj[i], i, obj[i]);\r\n\r\n                        if (value === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    // 非数组\r\n                } else {\r\n                    for (i in obj) {\r\n                        value = callback.call(obj[i], i, obj[i]);\r\n\r\n                        if (value === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return obj;\r\n        },\r\n        /**\r\n         *  把数组每一项经过callback处理后的值依次加入到返回数组中\r\n         *  iptv.map([\"a\",\"b\",\"c\"],function(value,index,arg){\r\n         *      return arg+value;\r\n         *  },\"Q\");\r\n         *  返回值[ \"Qa\", \"Qb\", \"Qc\" ]\r\n         * @param elems\r\n         * @param callback\r\n         * @param arg\r\n         * @returns {*}\r\n         */\r\n        map: function (elems, callback, arg) {\r\n            var value,\r\n                i = 0,\r\n                length = elems.length,\r\n                isArray = iptv.isArraylike(elems),\r\n                ret = [];\r\n            // 如果传入的 elems 是数组\r\n            if (isArray) {\r\n                for (; i < length; i++) {\r\n                    value = callback(elems[i], i, arg);\r\n                    if (value != null) {\r\n                        ret[ret.length] = value;\r\n                    }\r\n                }\r\n                // 如果传入的 elems 是对象\r\n            } else {\r\n                for (i in elems) {\r\n                    value = callback(elems[i], i, arg);\r\n                    if (value != null) {\r\n                        ret[ret.length] = value;\r\n                    }\r\n                }\r\n            }\r\n            // 这里相当于 var a = [];a.concat(ret)\r\n            return core_concat.apply([], ret);\r\n        },\r\n\r\n        /**\r\n         *  merge的两个参数必须为数组，作用就是修改第一个数组，使得它末尾加上第二个数组\r\n         * @param first\r\n         * @param second\r\n         * @returns {*}\r\n         */\r\n        merge: function (first, second) {\r\n            var l = second.length,\r\n                i = first.length,\r\n                j = 0;\r\n\r\n            if (typeof l === \"number\") {\r\n                for (; j < l; j++) {\r\n                    first[i++] = second[j];\r\n                }\r\n            } else {\r\n                while (second[j] !== undefined) {\r\n                    first[i++] = second[j++];\r\n                }\r\n            }\r\n            first.length = i;\r\n            return first;\r\n        },\r\n        /**\r\n         * 获取当前时间的时间戳\r\n         * @returns {number}\r\n         */\r\n        now: function () {\r\n            return (new Date()).getTime();\r\n        },\r\n        /**\r\n         * DOM ready 是否已经完成\r\n         */\r\n        isReady: false,\r\n        ready: function (callback_) {\r\n\r\n            // 确定 body 存在\r\n            if (!document.body) {\r\n                // 在 setTimeout 中触发的函数, 一定会在 DOM 准备完毕后触发\r\n                return setTimeout(iptv.ready, 0, callback_);\r\n            }\r\n            // 记录 DOM ready 已经完成\r\n            iptv.isReady = true;\r\n            callback_.call(this, iptv.isReady);\r\n        },\r\n        /**\r\n         * 浏览器名称\r\n         * @returns {*|string}\r\n         */\r\n        browser: function () {\r\n            var b3 = \"\";\r\n            var b4 = navigator.appName;\r\n            if (b4.indexOf(\"iPanel\") != -1) {\r\n                b3 = \"iPanel\";\r\n            } else if (b4.indexOf(\"Microsoft\") != -1) {\r\n                b3 = \"Miscrosoft\";\r\n            } else if (b4.indexOf(\"Google\") != -1) {\r\n                b3 = \"Google\";\r\n            } else if (b4.indexOf(\"Netscape\") != -1) {\r\n                b3 = \"Netscape\";\r\n            } else if (b4.indexOf(\"Opera\") != -1) {\r\n                b3 = \"Opera\";\r\n            }\r\n            return b3;\r\n        },\r\n        /**\r\n         * 判断是否为空 兼容数字0判断为不为null\r\n         * @param obj\r\n         * @returns {boolean}\r\n         */\r\n        isNull: function (obj) {\r\n            //0也判断为有效值\r\n            var l_ = '' + obj;\r\n            var ll_ = '' + 0;\r\n            if (l_ == ll_) {\r\n                return false;\r\n            }\r\n            if (typeof(obj) == 'object' && obj == '') {\r\n                return false;\r\n            }\r\n            if (typeof(obj) == 'undefined' || obj == undefined || obj == null || obj == '') {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * 判断是否不为空  兼容数字0判断为不为null\r\n         * @param obj\r\n         * @returns {boolean}\r\n         */\r\n        isNotNull: function (obj) {\r\n            //0也判断为有效值\r\n            var l_ = '' + obj;\r\n            var ll_ = '' + 0;\r\n            if (l_ == ll_) {\r\n                return true;\r\n            }\r\n            if (typeof(obj) == 'object' && obj == '') {\r\n                return true;\r\n            }\r\n            if (typeof(obj) == 'undefined' || obj == undefined || obj == null || obj == '') {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        /**\r\n         * 设置或获取style样式值\r\n         * @param elem\r\n         * @param name\r\n         * @param value\r\n         * @returns {undefined}\r\n         */\r\n        style: function (elem, name, value) {\r\n            if (!elem && !elem[0])return undefined;\r\n            if (value) {\r\n                if (iptv.isFunction(value)) {\r\n                    elem[0].style[name] = value.call(elem);\r\n                } else {\r\n                    elem[0].style[name] = \"\" + value;\r\n                }\r\n                return elem;\r\n            } else {\r\n                return elem[0].style[name];\r\n            }\r\n        },\r\n        /**\r\n         * 获取项目名称，http://127.0.0.1:8080/baidu/index.html——>baidu/\r\n         * @returns {string}\r\n         */\r\n        getContextName: function () {\r\n            //获取当前网址，如： http://localhost:8083/uimcardprj/share/meun.jsp  \r\n            var curWwwPath = window.location.href;\r\n            //获取主机地址之后的目录，如： uimcardprj/share/meun.jsp  \r\n            var pathName = window.location.pathname;\r\n            var pos = curWwwPath.indexOf(pathName);\r\n            //获取主机地址，如： http://localhost:8083  \r\n            var localhostPaht = curWwwPath.substring(0, pos);\r\n            //获取带\"/\"的项目名，如：uimcardprj/\r\n            var projectName = pathName.substring(1, pathName.substr(1).indexOf('/') + 2);\r\n            //var projectName=pathName.substring(0,pathName.substr(1).indexOf('/')+1)---->/uimcardprj  \r\n            return projectName;\r\n        },\r\n        /**\r\n         * 获取ip与端口  http://127.0.0.1:8080\r\n         * @returns {string}\r\n         */\r\n        getHostPath: function () {\r\n            //http://localhost:8083/uimcardprj/share/meun.jsp  \r\n            var href = window.location.href;\r\n            //uimcardprj/share/meun.jsp  \r\n            var pathname = window.location.pathname;\r\n            return href.substr(0, href.lastIndexOf(pathname));\r\n        },\r\n        /**\r\n         * 获取上下文路径  http://127.0.0.1:8080/baidu/index.html——>http://127.0.0.1:8080/baidu/\r\n         * @returns {string}\r\n         */\r\n        getContextPath: function () {\r\n            //http://www.qiguo.com/720p/html/main/main.html\r\n            var pathname = window.location.pathname;\r\n            var t1 = pathname.indexOf(\"/\", 0);\r\n            var sname = \"\";\r\n            //判断域名后面还有没有路径了，如果有就获取域名+工程名\r\n            if (pathname.indexOf(\"/\", t1 + 1) > -1)//5\r\n            {\r\n                sname = pathname.substring(t1 + 1, pathname.indexOf(\"/\", t1 + 1));\r\n                sname = this.getHostPath() + \"/\" + sname + \"/\";\r\n            }\r\n            return sname;\r\n        },\r\n        /**\r\n         * 将对象转换成url参数链接    aa=1&bb=2\r\n         * @param data\r\n         * @returns {*}\r\n         */\r\n        params: function (data) {\r\n            if (!data) {\r\n                return \"\";\r\n            }\r\n            var arr = [];\r\n            for (var i in data) {\r\n                arr.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(data[i]));\r\n            }\r\n            return arr.join(\"&\");\r\n        },\r\n        keyCode: function (evt) {\r\n            evt = evt != null && evt != undefined ? evt : window.event;\r\n            var keyCode = evt.which != null && evt.which != undefined && evt.which != 0 ? evt.which : evt.keyCode;\r\n            return keyCode;\r\n        },\r\n        /**\r\n         * 格式化字符串，动态添加值\r\n         * iptv.formatStr(\"我的名字是{0},我今年{1}岁了\",\"peter\",12)——>我的名字是peter,我今年12岁了\r\n         * @param str   \"我的名字是{0},我今年{1}岁了\"\r\n         * @returns {*} 我的名字是peter,我今年12岁了\r\n         */\r\n        formatStr: function (str) {\r\n            for (var i = 0; i < arguments.length - 1; i++) {\r\n                str = str.replace(\"{\" + i + \"}\", arguments[i + 1]);\r\n            }\r\n            return str;\r\n        },\r\n        /**\r\n         * 获取机顶盒型号\r\n         * @returns {*}\r\n         * @constructor\r\n         */\r\n        STBType: function () {\r\n            try {\r\n                return Authentication.CTCGetConfig(\"STBType\");\r\n            } catch (e) {\r\n            }\r\n            return core_strundefined;\r\n        },\r\n        /**\r\n         * 将方法上升到顶级window对象调用fn方法\r\n         * @param fn    可以为js代码字符，可以是function\r\n         * @param args  可以为数组参数，也可以为单个参数\r\n         * @returns {*}\r\n         */\r\n        call: function (fn, args) {\r\n            if (typeof(fn) == 'string') {\r\n                return eval(\"(\" + fn + \")\");\r\n            } else if (typeof(fn) == 'function') {\r\n                //如果参数不是数组,就创建数组参数\r\n                if (!iptv.isArray(args)) {\r\n                    var arr = [];\r\n                    for (var i = 1; i < arguments.length; i++) {\r\n                        arr.push(arguments[i]);\r\n                    }\r\n                    args = arr;\r\n                }\r\n                return fn.apply(window, args);\r\n            }\r\n        },\r\n        /**\r\n         * 求两个数之间的随机数，include为真时包含最大数，默认不包含最大数\r\n         * @param Min\r\n         * @param Max\r\n         * @returns {*}\r\n         */\r\n        rangeNum: function (Min, Max, include) {\r\n            include = include ? 1 : 0;\r\n            var num = Min + Math.floor(Math.random() * (Max - Min + include));\r\n            return num;\r\n        },\r\n        /**\r\n         * 求两个时间的天数差 日期格式为 YYYY-MM-dd\r\n         * @param DateOne   2017-12-1\r\n         * @param DateTwo   2017-1-1\r\n         * @returns {number}\r\n         */\r\n        daysBetween: function (DateOne, DateTwo) {\r\n            var OneMonth = DateOne.substring(5, DateOne.lastIndexOf('-'));\r\n            var OneDay = DateOne.substring(DateOne.length, DateOne.lastIndexOf('-') + 1);\r\n            var OneYear = DateOne.substring(0, DateOne.indexOf('-'));\r\n\r\n            var TwoMonth = DateTwo.substring(5, DateTwo.lastIndexOf('-'));\r\n            var TwoDay = DateTwo.substring(DateTwo.length, DateTwo.lastIndexOf('-') + 1);\r\n            var TwoYear = DateTwo.substring(0, DateTwo.indexOf('-'));\r\n\r\n            var cha = ((Date.parse(OneMonth + '/' + OneDay + '/' + OneYear) - Date.parse(TwoMonth + '/' + TwoDay + '/' + TwoYear)) / 86400000);\r\n            return Math.abs(cha);\r\n        },\r\n        /**\r\n         * 生成当前服务器时间搓\r\n         */\r\n        /*runTimeInterval: setInterval(function () {\r\n         if (iptv.serverTimestamp != undefined && iptv.serverTimestamp != null && iptv.serverTimestamp != '') {\r\n         iptv.serverTimestamp = parseInt(iptv.serverTimestamp) + 1000;\r\n         } else {\r\n         iptv.serverTimestamp = (new Date()).getTime();\r\n         }\r\n         }, 1000),*/\r\n        /**\r\n         * 获取当前服务器时间对象\r\n         * @returns {Date}\r\n         */\r\n        getServerDate: function () {\r\n            var date = new Date();\r\n            if (iptv.serverTimestamp != undefined && iptv.serverTimestamp != null && iptv.serverTimestamp != '') {\r\n                date = new Date(parseInt(iptv.serverTimestamp));\r\n            }\r\n            return date;\r\n        },\r\n        /**\r\n         * 设置Cookie\r\n         * @param name\r\n         * @param value\r\n         * @param timestr\r\n         */\r\n        setCookie: function (name, value, timestr) {\r\n            //var exp2 = iptv.getServerDate();\r\n            var exp2 = new Date();\r\n            var id = timestr ? timestr : \"D1\";\r\n            var t = getsec(id);\r\n            exp2.setTime(exp2.getTime() + t);\r\n            document.cookie = name + (\"=\" + escape(value) + \";expires=\" + exp2.toGMTString() + \";path=/;\");\r\n        },\r\n        /**\r\n         * 获取Cookie\r\n         * @param name\r\n         * @returns {*}\r\n         */\r\n        getCookie: function (name) {\r\n            var arr = document.cookie.match(new RegExp(\"(^| |;)\" + name + \"=([^;]*)(;|$)\"));\r\n            var s = \"\";\r\n            if (arr != null) {\r\n                s = unescape(arr[2]);\r\n                if (s != null && s.length > 0) {\r\n                    if (s.indexOf('\"', 0) == 0 && s.substring(s.length - 1, s.length) == \"\\\"\") {\r\n                        s = s.substring(1, s.length);\r\n                        s = s.substring(0, s.length - 1);\r\n                    }\r\n                }\r\n                return s;\r\n            }\r\n            return null;\r\n        },\r\n        /**\r\n         * 删除Cookie\r\n         * @param name\r\n         */\r\n        delCookie: function (name) {\r\n            //var exp = iptv.getServerDate();\r\n            var exp = new Date();\r\n            exp.setTime(exp.getTime() - 1);\r\n            var path_ = \"\";\r\n            document.cookie = name + \"=\" + null + \";expires=\" + exp.toGMTString() + \";path=/\" + path_ + \";\";\r\n        },\r\n        /**\r\n         * 获取URL请求值\r\n         * @param d url key值\r\n         * @returns {*}\r\n         */\r\n        requestValue: function (d, url, defaultValue) {\r\n            var b = url || window.location.href;\r\n            var f = b.indexOf(\"?\");\r\n            var e = b.substr(f + 1);\r\n            var c = e.split(\"&\");\r\n            defaultValue = defaultValue == undefined ? \"\" : defaultValue;\r\n            for (var a = 0; a < c.length; a++) {\r\n                var g = c[a].split(\"=\");\r\n                if (g[0].toUpperCase() == d.toUpperCase()) {\r\n                    return g[1];\r\n                }\r\n            }\r\n            return defaultValue;\r\n        },\r\n        show: function (id) {\r\n            return iptv(\"#\" + id).show();\r\n        },\r\n        hide: function (id) {\r\n            return iptv(\"#\" + id).hide();\r\n        },\r\n        html: function (id, html) {\r\n            return iptv(\"#\" + id).html(html);\r\n        },\r\n        addClass: function (id, className) {\r\n            return iptv(\"#\" + id).addClass(className);\r\n        },\r\n        removeClass: function (id, className) {\r\n            return iptv(\"#\" + id).removeClass(className);\r\n        },\r\n        // 解析 JSON 字符串\r\n        parseJSON: function (data) {\r\n            if (window.JSON && window.JSON.parse) {\r\n                return window.JSON.parse(data);\r\n            }\r\n\r\n            if (data === null) {\r\n                return data;\r\n            }\r\n\r\n            if (typeof data === \"string\") {\r\n\r\n                data = iptv.trim(data);\r\n                if (data) {\r\n                    if (rvalidchars.test(data.replace(rvalidescape, \"@\").replace(rvalidtokens, \"]\").replace(rvalidbraces, \"\"))) {\r\n                        return (new Function(\"return \" + data))();\r\n                    }\r\n                }\r\n            }\r\n            iptv.error(\"Invalid JSON: \" + data);\r\n        },\r\n        parseXML: function (data) {\r\n            var xml, tmp;\r\n            if (!data || typeof data !== \"string\") {\r\n                return null;\r\n            }\r\n            try {\r\n                if (window.DOMParser) { // Standard\r\n                    tmp = new DOMParser();\r\n                    xml = tmp.parseFromString(data, \"text/xml\");\r\n                } else { // IE\r\n                    xml = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n                    xml.async = \"false\";\r\n                    xml.loadXML(data);\r\n                }\r\n            } catch (e) {\r\n                xml = undefined;\r\n            }\r\n            if (!xml || !xml.documentElement || xml.getElementsByTagName(\"parsererror\").length) {\r\n                iptv.error(\"Invalid XML: \" + data);\r\n            }\r\n            return xml;\r\n        },\r\n        parseDOM: function (data) {\r\n            var xmlDoc, parser;\r\n            if (!data || typeof data !== \"string\") {\r\n                return null;\r\n            }\r\n            try {//IE\r\n                xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n                xmlDoc.async = \"false\";\r\n                xmlDoc.loadXML(data);\r\n                return xmlDoc;\r\n            }\r\n            catch (e) {\r\n                try //Firefox, Mozilla, Opera, etc.\r\n                {\r\n                    parser = new DOMParser();\r\n                    xmlDoc = parser.parseFromString(data, \"text/xml\");\r\n                    return xmlDoc;\r\n                }\r\n                catch (e) {\r\n                    iptv.error(\"Invalid DOM: \" + data);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    //添加类型\r\n    iptv.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function (i, name) {\r\n        class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n    });\r\n    //扩展日期\r\n    iptv.extend(Date.prototype, {\r\n        /**\r\n         * 判断闰年\r\n         * @returns {boolean}\r\n         */\r\n        isLeapYear: function () {\r\n            return ( 0 == this.getYear() % 4 && ((this.getYear() % 100 != 0 ) || (this.getYear() % 400 == 0 )) );\r\n        },\r\n        /**\r\n         * 日期格式化\r\n         *格式 YYYY/yyyy/YY/yy 表示年份\r\n         * MM/M 月份\r\n         * W/w 星期\r\n         * dd/DD/d/D 日期\r\n         * hh/HH/h/H 时间\r\n         * mm/m 分钟\r\n         * ss/SS/s/S 秒\r\n         * @param formatStr\r\n         * @returns {*}\r\n         * @constructor\r\n         */\r\n        Format: function (formatStr) {\r\n            var str = formatStr;\r\n            var Week = ['日', '一', '二', '三', '四', '五', '六'];\r\n\r\n            str = str.replace(/yyyy|YYYY/, this.getFullYear());\r\n            str = str.replace(/yy|YY/, (this.getYear() % 100) > 9 ? (this.getYear() % 100).toString() : '0' + (this.getYear() % 100));\r\n            var month = this.getMonth() + 1;\r\n            str = str.replace(/MM/, month > 9 ? month : '0' + month);\r\n            str = str.replace(/M/g, month);\r\n\r\n            str = str.replace(/w|W/g, Week[this.getDay()]);\r\n\r\n            str = str.replace(/dd|DD/, this.getDate() > 9 ? this.getDate().toString() : '0' + this.getDate());\r\n            str = str.replace(/d|D/g, this.getDate());\r\n\r\n            str = str.replace(/hh|HH/, this.getHours() > 9 ? this.getHours().toString() : '0' + this.getHours());\r\n            str = str.replace(/h|H/g, this.getHours());\r\n            str = str.replace(/mm/, this.getMinutes() > 9 ? this.getMinutes().toString() : '0' + this.getMinutes());\r\n            str = str.replace(/m/g, this.getMinutes());\r\n\r\n            str = str.replace(/ss|SS/, this.getSeconds() > 9 ? this.getSeconds().toString() : '0' + this.getSeconds());\r\n            str = str.replace(/s|S/g, this.getSeconds());\r\n\r\n            return str;\r\n        },\r\n        /**\r\n         * 日期计算\r\n         * @param strInterval\r\n         * @param Number\r\n         * @returns {Date}\r\n         * @constructor\r\n         */\r\n        DateAdd: function (strInterval, Number) {\r\n            var dtTmp = this;\r\n            switch (strInterval) {\r\n                case 's' :\r\n                    return new Date(Date.parse(dtTmp) + (1000 * Number));\r\n                case 'n' :\r\n                    return new Date(Date.parse(dtTmp) + (60000 * Number));\r\n                case 'h' :\r\n                    return new Date(Date.parse(dtTmp) + (3600000 * Number));\r\n                case 'd' :\r\n                    return new Date(Date.parse(dtTmp) + (86400000 * Number));\r\n                case 'w' :\r\n                    return new Date(Date.parse(dtTmp) + ((86400000 * 7) * Number));\r\n                case 'q' :\r\n                    return new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + Number * 3, dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds());\r\n                case 'm' :\r\n                    return new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + Number, dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds());\r\n                case 'y' :\r\n                    return new Date((dtTmp.getFullYear() + Number), dtTmp.getMonth(), dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds());\r\n            }\r\n            ;\r\n        },\r\n        /**\r\n         * 把日期分割成数组\r\n         * @returns {*}\r\n         */\r\n        toArray: function () {\r\n            var myDate = this;\r\n            var myArray = Array();\r\n            myArray[0] = myDate.getFullYear();\r\n            myArray[1] = myDate.getMonth();\r\n            myArray[2] = myDate.getDate();\r\n            myArray[3] = myDate.getHours();\r\n            myArray[4] = myDate.getMinutes();\r\n            myArray[5] = myDate.getSeconds();\r\n            return myArray;\r\n        },\r\n        /**\r\n         * 取得日期数据信息\r\n         * 参数 interval 表示数据类型\r\n         * y 年 m月 d日 w星期 ww周 h时 n分 s秒\r\n         * @param interval\r\n         * @returns {string}\r\n         * @constructor\r\n         */\r\n        DatePart: function (interval) {\r\n            var myDate = this;\r\n            var partStr = '';\r\n            var Week = ['日', '一', '二', '三', '四', '五', '六'];\r\n            switch (interval) {\r\n                case 'y' :\r\n                    partStr = myDate.getFullYear();\r\n                    break;\r\n                case 'm' :\r\n                    partStr = myDate.getMonth() + 1;\r\n                    break;\r\n                case 'd' :\r\n                    partStr = myDate.getDate();\r\n                    break;\r\n                case 'w' :\r\n                    partStr = Week[myDate.getDay()];\r\n                    break;\r\n                case 'ww' :\r\n                    partStr = myDate.WeekNumOfYear();\r\n                    break;\r\n                case 'h' :\r\n                    partStr = myDate.getHours();\r\n                    break;\r\n                case 'n' :\r\n                    partStr = myDate.getMinutes();\r\n                    break;\r\n                case 's' :\r\n                    partStr = myDate.getSeconds();\r\n                    break;\r\n            }\r\n            return partStr;\r\n        }\r\n    });\r\n\r\n    //定义对象方法\r\n    iptv.fn.extend({\r\n        /**\r\n         * 设置隐藏\r\n         * @returns {hide}\r\n         */\r\n        hide: function () {\r\n            if (this[0]) {\r\n                iptv.style(this, \"visibility\", \"hidden\");\r\n            }\r\n            return this;\r\n        },\r\n        show: function () {\r\n            if (this[0]) {\r\n                iptv.style(this, \"visibility\", \"visible\");\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * 设置或获取html\r\n         * @param html\r\n         * @returns {html}\r\n         */\r\n        html: function (html) {\r\n            if (this[0]) {\r\n                if (html !== undefined) {\r\n                    this[0].innerHTML = \"\" + html;\r\n                    return this;\r\n                } else {\r\n                    return this[0].innerHTML;\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        },\r\n        /**\r\n         * 替换或获取Src路径地址\r\n         * @param src\r\n         * @returns {setSrc}\r\n         */\r\n        src: function (src) {\r\n            if (this[0] && iptv.trim(src)) {\r\n                this[0].src = \"\" + src;\r\n                return this;\r\n            } else if (this[0]) {\r\n                return this[0].src;\r\n            }\r\n\r\n        },\r\n        /**\r\n         * 获取或设置样式\r\n         * 设置只能设置style样式\r\n         * @param name\r\n         * @param value\r\n         */\r\n        attr: function (name, value) {\r\n            if (name != null && value === undefined) {\r\n                return iptv(this).getStyle(name);\r\n            } else if (name != null && value != undefined) {\r\n                return iptv.style(this, name, value);\r\n            }\r\n\r\n        },\r\n        /**\r\n         * 判断是否存在className样式名 如果存在就返回一个数组对象 不存在就返回为Null\r\n         * @param className\r\n         * @returns {boolean}\r\n         */\r\n        hasClass: function (className) {\r\n            if (!className || !this[0]) {\r\n                return false;\r\n            }\r\n            return this[0].className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'));\r\n        },\r\n        /**\r\n         * 添加类样式\r\n         * @param className\r\n         * @returns {addClass}\r\n         */\r\n        addClass: function (className) {\r\n            if (!className || !this[0]) {\r\n                return this;\r\n            }\r\n            if (!this.hasClass(className)) {\r\n                this[0].className += ' ' + className;\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * 移除类样式\r\n         * @param className\r\n         * @returns {removeClass}\r\n         */\r\n        removeClass: function (className) {\r\n            if (!className || !this[0]) {\r\n                return this;\r\n            }\r\n            if (this.hasClass(className)) {\r\n                this[0].className = this[0].className.replace(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'), ' ');\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * 如果存在就删除className样式，如果不存在就添加className样式\r\n         * @param className\r\n         * @returns {toggleClass}\r\n         */\r\n        toggleClass: function (className) {\r\n            if (!className || !this[0]) {\r\n                return this;\r\n            }\r\n            if (this.hasClass(className)) {\r\n                return this.removeClass(className);\r\n            } else {\r\n                return this.addClass(className);\r\n            }\r\n        },\r\n        /**\r\n         * 添加事件\r\n         * @param type\r\n         * @param func\r\n         * @returns {addEvent}\r\n         */\r\n        addEventListener: function (types, func) {\r\n            if (!this[0]) {\r\n                return this;\r\n            }\r\n            types = ( types || \"\" ).match(rnothtmlwhite) || [\"\"];\r\n            var t = types.length;\r\n            while (t--) {\r\n                if (this[0].addEventListener) {\r\n                    //监听IE9，谷歌和火狐 \r\n                    this[0].addEventListener(types[t], func, false);\r\n                } else if (this[0].attachEvent) {\r\n                    this[0].attachEvent(\"on\" + types[t], func);\r\n                } else {\r\n                    this[0][\"on\" + types[t]] = func;\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * 移除事件\r\n         * @param target\r\n         * @param type\r\n         * @param func\r\n         */\r\n        removeEventListener: function (types, func) {\r\n            if (!this[0]) {\r\n                return this;\r\n            }\r\n            types = ( types || \"\" ).match(rnothtmlwhite) || [\"\"];\r\n            var t = types.length;\r\n            while (t--) {\r\n                if (this[0].removeEventListener) {\r\n                    //监听IE9，谷歌和火狐 \r\n                    this[0].removeEventListener(types[t], func, false);\r\n                } else if (this[0].detachEvent) {\r\n                    this[0].detachEvent(\"on\" + types[t], func);\r\n                } else {\r\n                    delete target[\"on\" + types[t]];\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * 添加事件，事件只执行一次\r\n         * @param types 事件名称，支持多个事件同时添加，例如 webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend\r\n         * @param func\r\n         * @returns {one}\r\n         */\r\n        one: function (types, func) {\r\n            if (!this[0]) {\r\n                return this;\r\n            }\r\n            types = ( types || \"\" ).match(rnothtmlwhite) || [\"\"];\r\n            var t = types.length,\r\n                this_ = this;\r\n            while (t--) {\r\n                //事件触发时，执行如下回到方法\r\n                var callBack = (function (obj, type, func) {\r\n                    return function () {\r\n                        //当事件触发后，此时才调用用户的回调函数\r\n                        func && func.apply(obj, arguments);\r\n                        //控制只执行一次事件，事件执行一次后，通过移除事件来做到只执行一次\r\n                        arguments && arguments.callee && obj.removeEventListener(type, arguments.callee);\r\n                    };\r\n                })(this_, types[t], func);\r\n                this.addEventListener(types[t], callBack);\r\n            }\r\n            return this;\r\n        },\r\n        //设置css样式\r\n        setCss: function (key, value) {\r\n            var that = this;\r\n            if (!this[0] || arguments.length == 0) {\r\n                return that;\r\n            }\r\n            //是对象，批量设置\r\n            if (typeof key === \"object\") {\r\n                iptv.each(key, function (key, value) {\r\n                    that[0].style[iptv.camelCase(key)] = value;\r\n                });\r\n                return that;\r\n            }\r\n            //单个设置\r\n            if (key != undefined && value != undefined) {\r\n                that[0].style[iptv.camelCase(key)] = value;\r\n            }\r\n            return that;\r\n        },\r\n        /**\r\n         * 设置css3样式\r\n         * @param objAttr\r\n         */\r\n        setCss3: function (objAttr) {\r\n            //循环属性对象\r\n            for (var i in objAttr) {\r\n                this.setCss(\"-webkit-\"+i,objAttr[i]);\r\n                this.setCss(\"-moz-\"+i,objAttr[i]);\r\n                this.setCss(\"-o-\"+i,objAttr[i]);\r\n                this.setCss(\"-ms-\"+i,objAttr[i]);\r\n                this.setCss(\"-khtml-\"+i,objAttr[i]);\r\n            }\r\n            return this;\r\n        },\r\n        contains: function (key) {\r\n            if (this.context && iptv.isArray(this.context)) {\r\n                var i = this.context.length;\r\n                while (i--) {\r\n                    if (this.context[i] === key) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * 获取所有样式\r\n         * @param name\r\n         * @returns {*}\r\n         */\r\n        getStyle: function (name) {\r\n            if (!name || !this[0]) {\r\n                return this;\r\n            }\r\n            var style = this[0].currentStyle ? this[0].currentStyle : window.getComputedStyle(this[0], null);\r\n            var value = style[style.getPropertyValue ? 'getPropertyValue' : 'getAttribute'](name);\r\n            if (!value && this[0].getAttribute) {\r\n                value = this.getAttr(name);\r\n            }\r\n            return value;\r\n        },\r\n        setAttr: function (name, value) {\r\n            if (!name || !this[0]) {\r\n                return this;\r\n            }\r\n            this[0].setAttribute && this[0].setAttribute(name, value);\r\n            return this;\r\n        },\r\n        getAttr: function (name) {\r\n            if (!name || !this[0]) {\r\n                return this;\r\n            }\r\n            return this[0].getAttribute && this[0].getAttribute(name);\r\n        },\r\n        remove: function () {\r\n            if (!this[0]) {\r\n                return this;\r\n            }\r\n            //移除缓存数据\r\n            iptv.removeData(this[0]);\r\n            this[0].parentNode && this[0].parentNode.removeChild(this[0]);\r\n            return this;\r\n        },\r\n        width: function (width) {\r\n            if (!this[0]) {\r\n                return this;\r\n            }\r\n            //没有传值，返回宽度\r\n            if(width === undefined){\r\n                width = this.getStyle(\"width\");\r\n                return width && parseInt(width);\r\n            }\r\n            //有传值，设置宽度\r\n            return iptv.style(this, \"width\", width+\"px\");\r\n        },\r\n        height: function (height) {\r\n            if (!this[0]) {\r\n                return this;\r\n            }\r\n            //没有传值，返回高度\r\n            if(height === undefined){\r\n                height = this.getStyle(\"height\");\r\n                return height && parseInt(height);\r\n            }\r\n            //有传值，设置高度\r\n            return iptv.style(this, \"height\", height+\"px\");\r\n        }\r\n    });\r\n\r\n\r\n    // 检查数据缓存对象是否为空\r\n    function isEmptyDataObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            //如果name等于data,并且obj[\"data\"]是一个空对象，就跳到下个循环\r\n            if (name === \"data\" && iptv.isEmptyObject(obj[name])) {\r\n                continue;\r\n            }\r\n            //如果name不等于toJSON返回不是空对象\r\n            if (name !== \"toJSON\") {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // 数据存取方法  （pvt 表示此方法仅在内部使用）\r\n    function internalData(elem, name, data, pvt) {\r\n        var ret,\r\n            thisCache,\r\n            internalKey = iptv.expando,\r\n            isNode = elem.nodeType,\r\n            cache = isNode ? iptv.cache : elem,\r\n            //如果是dom，取dom内的id值\r\n            //如果不是dom,取js对象的internalKey值\r\n            id = isNode ? elem[internalKey] : elem[internalKey] && internalKey;\r\n        //如果是读取数据,数据不存在，直接return，满足数据不存在有以下几种情况\r\n        //id为null\r\n        //全局cache 或者 dom cache缓存不存在\r\n        //不是内部数据，而是外部自定义的数据cache[id].data没有值\r\n        if ((!id || !cache[id] || (!pvt && !cache[id].data)) && data === undefined && typeof name === \"string\") {\r\n            return;\r\n        }\r\n        //如果是存储数据,id不存在\r\n        if (!id) {\r\n            // 只有当 elem 是 DOM 结点的时候，需要添加一个唯一的 ID\r\n            if (isNode) {\r\n                // iptv.guid 全局计数器\r\n                // 对于 DOM 结点，iptv.uuid 会自加 1，并附加到 DOM 元素上\r\n                id = elem[internalKey] = iptv.guid++;\r\n                // 不是 DOM 结点，是 JS 对象的话直接使用 internalKey\r\n            } else {\r\n                id = internalKey;\r\n            }\r\n        }\r\n\r\n        // 如果是存储数据 或者 读取数据，cache[id]没有数据的话，初始化一下数据\r\n        // 如果 cache[id] 不存在\r\n        if (!cache[id]) {\r\n            // 对于 DOM 如果数据缓存对象不存在，则初始化为空对象 {}\r\n            // 对于 JS 对象，设置方法 toJSON 为空函数，以避免在执行 JSON.stringify() 时暴露缓存数据\r\n            // 如果一个对象定义了方法 toJSON(), JSON.stringify() 在序列化该对象时会调用这个方法来生成该对象的 JSON 元素\r\n            cache[id] = isNode ? {} : {\r\n                toJSON: iptv.noop\r\n            };\r\n        }\r\n\r\n        //如果是存储数据\r\n        //如果参数 name 是对象，则批量设置数据，也就是说将name的属性名作为key，属性值作为value，进行存储\r\n        if (typeof name === \"object\" || typeof name === \"function\") {\r\n            // pvt 表示方法使用于内部\r\n            if (pvt) {\r\n                // 对于内部数据，把参数 name 中的属性合并到 cache[id] 中\r\n                cache[id] = iptv.extend(cache[id], name);\r\n            } else {\r\n                // 对于自定义数据，把参数 name 中的属性合并到 cache[id].data 中\r\n                cache[id].data = iptv.extend(cache[id].data, name);\r\n            }\r\n        }\r\n\r\n        // 这是缓存后的数据\r\n        thisCache = cache[id];\r\n\r\n        //如果是外部用户定义数据\r\n        // 为了区分内部使用的数据和用户定义的数据，jQuery 将内部使用的数据直接存储在 cache[id] 里面，而用户定义的数据则存储在 cache[id].data 中\r\n        // 如果是自定义数据 则将 thisCache 变量指向到 .data 对象中,如果为空则创建一个空对象\r\n        // 这里是个重点，很简单的代码，这里改变了将数据存储的位置\r\n        if (!pvt) {\r\n            //如果用户定义数据不存在，这里进行初始化\r\n            if (!thisCache.data) {\r\n                thisCache.data = {};\r\n            }\r\n            //将用户定义的数据覆盖thisCache，因为如果这里不覆盖的话，thisCache可能是内部数据，可能是外部数据\r\n            thisCache = thisCache.data;\r\n        }\r\n\r\n        //如果是存储数据\r\n        // 如果 data 不为空，设置键值对 key - value\r\n        if (typeof name === \"string\" && data !== undefined) {\r\n            // camelCase 驼峰表示法\r\n            thisCache[iptv.camelCase(name)] = data;\r\n        }\r\n\r\n        // 如果参数 name 是 \"string\" 类型，则读取单个数据\r\n        // 就是获取返回值了 internalData(elem,'key')\r\n        if (typeof name === \"string\") {\r\n            // 先尝试读取参数 name 对应的数据\r\n            ret = thisCache[name];\r\n            // 如果未取到，则把参数 name 转换为驼峰式再次尝试读取对应的数据\r\n            if (ret == null) {\r\n                // camelCased -- 将 name 变为驼峰表示法\r\n                ret = thisCache[iptv.camelCase(name)];\r\n            }\r\n        } else {\r\n            // 如果未传入参数 name , data ,则返回数据缓存对象\r\n            ret = thisCache;\r\n        }\r\n        // 返回 ret 对象\r\n        return ret;\r\n    }\r\n\r\n    // 数据对象的移除 （pvt 表示此方法仅在内部使用）\r\n    function internalRemoveData(elem, name, pvt) {\r\n        var thisCache, i,\r\n            // 元素的 nodeType\r\n            isNode = elem.nodeType,\r\n            // 只有 DOM 元素需要全局的 iptv 缓存 cache，\r\n            // 而如果是 JS 对象，则直接将数据保存在这个对象上\r\n            cache = isNode ? iptv.cache : elem,\r\n            // 添加的对象的 key 值，根据元素 elem 的 nodeType 判断\r\n            // 如果是 Dom 元素，为 elem[internalKey]\r\n            // 如果是 JS 对象，elem[internalKey] 存在则使用 internalKey ，反之，为 elem[internalKey]\r\n            id = isNode ? elem[iptv.expando] : iptv.expando;\r\n        // 如果没有数据那也就不用删除了\r\n        if (!cache[id]) {\r\n            return;\r\n        }\r\n\r\n        // cache[id] != false\r\n        // 有数据存在\r\n        if (name) {\r\n            // 缓存的位置，指向私有对象还是指向用户自定义的 data\r\n            thisCache = pvt ? cache[id] : cache[id].data;\r\n            // 有数据\r\n            if (thisCache) {\r\n                // 非数组\r\n                if (!iptv.isArray(name)) {\r\n                    // 不是数组的话 则单独进行匹配删除\r\n                    if (name in thisCache) {\r\n                        name = [name];\r\n                    } else {\r\n                        // 进行一次驼峰命名转换\r\n                        name = iptv.camelCase(name);\r\n                        // 如果进行了驼峰命名转换的 name 存在于 thisCache中\r\n                        if (name in thisCache) {\r\n                            // 转化为数组形式\r\n                            name = [name];\r\n                        } else {\r\n                            // 没找到，使用空格分隔 name，也是转化为数组形式\r\n                            name = name.split(\" \");\r\n                        }\r\n                    }\r\n                    // 如果是数组\r\n                } else {\r\n                    //把数组每一项的name值，进行驼峰修改后，拼接成新数组\r\n                    name = name.concat(iptv.map(name, iptv.camelCase));\r\n                }\r\n\r\n                // 经过上面的处理我们看到 iptv 兼容了很多形式上的参数\r\n                // [key1,key2] \"key1 key2\" \"key1\" \"key1-name\"\r\n                // 上边的一顿整理，到了这里都是一个数组，执行删除操作\r\n                // 遍历删除\r\n                i = name.length;\r\n                while (i--) {\r\n                    delete thisCache[name[i]];\r\n                }\r\n                // isEmptyDataObject 检测的是 JS 数据对象是否为空\r\n                // isEmptyObject 检测一个普通对象是否是空对象\r\n                // 如果数据对象中还有剩余数据则函数执行完毕，return 返回\r\n                if (pvt ? !isEmptyDataObject(thisCache) : !iptv.isEmptyObject(thisCache)) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        // 代码执行到这里的时候有两种情况：\r\n        // 1.没有传name参数，意味着要删除所有数据\r\n        // 2.按照传递的name参数删除后,没有数据了\r\n        // 如果所有数据都被删除完了，那么就直接将缓存数据清空\r\n        if (!pvt) {\r\n            //删除 cache[id].data\r\n            delete cache[id].data;\r\n            // 删除后检测到数据缓存对象还有剩余数据则返回\r\n            if (!isEmptyDataObject(cache[id])) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        //如果内部数据都删除完了，直接将缓存数据清空\r\n        cache[id] = null;\r\n    }\r\n\r\n    // 这里函数是用来解析 elem 元素身上的 html 标签 \"data-\" 的值\r\n    // 如果传入的 data 对象有值的话,则直接返回不进行解析\r\n    function dataAttr(elem, key, data) {\r\n        // 如果传入的 data 为空且 elem 是 DOM 元素，说明全局缓存中，没有存储key对应的值\r\n        if (data === undefined && elem.nodeType === 1) {\r\n\r\n            // rmultiDash = /([A-Z])/g -- 匹配大写字母\r\n            // key.replace(rmultiDash, \"-$1\").toLowerCase() 的意思是将驼峰表示法转化为斜杠表示，即 fontSzie --> font-size\r\n            // 键名转换，这里的意思是将传入的 name 统一转化为 data-xxx-xxx 的形式\r\n            //$1代表取匹配到的字符，-$1代表匹配到的字符前面加上'-'符号\r\n            var name = \"data-\" + key.replace(rmultiDash, \"-$1\").toLowerCase();\r\n\r\n            // 查找是否有该属性\r\n            data = elem.getAttribute(name);\r\n\r\n            // 找到了，且类型是 String,所以需要将字符串的值转换为对应的对象\r\n            if (typeof data === \"string\") {\r\n                try {\r\n                    data = data === \"true\" ? true :\r\n                        data === \"false\" ? false :\r\n                            data === \"null\" ? null :\r\n                                +data + \"\" === data ? +data :\r\n                                    rbrace.test(data) ? iptv.parseJSON(data) : data;\r\n                } catch (e) {\r\n                }\r\n\r\n                //同时将data-xxx存储在dom上面的数据，存储到全局缓存中\r\n                iptv.data(elem, key, data);\r\n            } else {\r\n                //如果没有值，返回undefined\r\n                data = undefined;\r\n            }\r\n        }\r\n        // 返回结果\r\n        return data;\r\n    }\r\n\r\n    //新增全局数据存储\r\n    iptv.extend({\r\n        /**\r\n         * 全局计数器\r\n         */\r\n        guid: 1,\r\n        /**\r\n         * 全局的缓存对象\r\n         */\r\n        cache: {},\r\n        /**\r\n         * 检查对象是否已经存储了数据\r\n         * @param elem\r\n         * @returns {boolean}\r\n         */\r\n        hasData: function (elem) {\r\n            elem = elem.nodeType ? iptv.cache[elem[iptv.expando]] : elem[iptv.expando];\r\n            return !!elem && !isEmptyDataObject(elem);\r\n        },\r\n        /**\r\n         * 给 elem（可是DOM，可以是JS对象）添加 key-value 为 name-data 的数据\r\n         * @param elem\r\n         * @param name\r\n         * @param data\r\n         * @returns {*}\r\n         */\r\n        data: function (elem, name, data) {\r\n            return internalData(elem, name, data);\r\n        },\r\n        /**\r\n         * 移除 elem（可以是DOM，可以是JS对象）上\r\n         * @param elem\r\n         * @param name\r\n         * @returns {*}\r\n         */\r\n        removeData: function (elem, name) {\r\n            return internalRemoveData(elem, name);\r\n        },\r\n        // 添加或读取一个仅供内部使用的数据\r\n        _data: function (elem, name, data) {\r\n            return internalData(elem, name, data, true);\r\n        },\r\n        // 删除内部使用的数据数据\r\n        _removeData: function (elem, name) {\r\n            return internalRemoveData(elem, name, true);\r\n        }\r\n    });\r\n\r\n    //所有iptv对象添加数据存储\r\n    iptv.fn.extend({\r\n        /**\r\n         * 获取或者存储数据\r\n         */\r\n        data: function (key, value) {\r\n            var attrs, name,\r\n                data = null,\r\n                i = 0,\r\n                elem = this[0];\r\n            //如果key是undefined，说明调用方式为iptv(\"#xx\").data()\r\n            //所以如下流程为，获取该对象在全局缓存中的所有数据，以及包括elem节点上data-xxx存储的数据\r\n            //如果elem节点存在data-xxx类型的数据，同时将这些数据缓存到全局缓存中\r\n            if (key === undefined) {\r\n                if (this.length) {\r\n                    data = iptv.data(elem);\r\n                    //如果elem是DOM元素，同时，该DOM元素没有被转换过data-xxx数据，\r\n                    if (elem.nodeType === 1 && !iptv._data(elem, \"parsedAttrs\")) {\r\n                        // 拿到 dom 元素的属性列表\r\n                        attrs = elem.attributes;\r\n                        // 遍历\r\n                        for (; i < attrs.length; i++) {\r\n                            // name为属性名\r\n                            name = attrs[i].name;\r\n                            // 先尝试是否有命名为 data-xxxx 的数据\r\n                            if (name.indexOf(\"data-\") === 0) {\r\n                                // 取 data-xxxx 后面的 xxxx，即是\r\n                                // <div data-idName=\"123\"></div> 取其属性 \"data-idName\" 其中的 idName\r\n                                name = iptv.camelCase(name.slice(5));\r\n\r\n                                // 通过 dataAttr 解析 elem 元素身上的 html 标签 \"data-\" 的值\r\n                                //通过elem元素身上的\"data-xxx\"得到key值，去全局缓存中取值data[name],如果data[name]得到的值为null的话（说明全局缓存中不存在）,那么最后再去取elem元素上的值\r\n                                //如果全局缓存中不存在name对于的值，同时，在elem元素身上获取到了name对应的值，最终，将name与对应的值，缓存到全局缓存汇总\r\n                                dataAttr(elem, name, data[name]);\r\n                            }\r\n                        }\r\n                        //标记elem元素已经转换过数据\r\n                        iptv._data(elem, \"parsedAttrs\", true);\r\n                    }\r\n                }\r\n                return data;\r\n            }\r\n\r\n            // 方法走到这里，说明传入了至少一个参数\r\n            //如果key是一个对象，将此对象下的属性名作为key，属性值作为value存储起来\r\n            if (typeof key === \"object\") {\r\n                //这里使用each,意思就是说，当前iptv对象下有几个dom对象，就分别给这几个对象进行批量存储\r\n                return this.each(function () {\r\n                    iptv.data(this, key);\r\n                });\r\n            }\r\n\r\n            // 返回结果\r\n            return arguments.length > 1 ?\r\n\r\n                // 参数大于一个，那么必然是设置 key-value\r\n                // 设置单个 key\r\n                this.each(function () {\r\n                    iptv.data(this, key, value);\r\n                }) :\r\n                // 参数为一个，那么就是获取数据 key,获取数据的话，只能获取数组第一个dom的属性\r\n                // 首先应该尝试内部 jQuery.data 是有值，再解析 elem 元素身上的 html 标签 \"data-\" 的值\r\n                // 因为 dataAttr(elem, key, data) 里，如果 data !== undefined 是直接返回 data的\r\n                elem ? dataAttr(elem, key, iptv.data(elem, key)) : null;\r\n        },\r\n        // 移除自定义数据\r\n        removeData: function (key) {\r\n            return this.each(function () {\r\n                iptv.removeData(this, key);\r\n            });\r\n        }\r\n    });\r\n\r\n    //加入outHeight，outWidth,innerHeight,innnerWidth\r\n    iptv.each([\"Height\", \"Width\"], function (i, name) {\r\n        var tl = i ? \"left\" : \"top\",\r\n            br = i ? \"right\" : \"bottom\";\r\n\r\n        // innerHeight and innerWidth内部宽高\r\n        iptv.fn[\"inner\" + name] = function () {\r\n            if (!this[0]) {\r\n                return null;\r\n            }\r\n            //元素内部高度=padding-top + height + padding-bottom\r\n            return this[name.toLowerCase()]() + parseInt(this.getStyle(\"padding-\"+tl)) + parseInt(this.getStyle(\"padding-\"+br));\r\n        };\r\n\r\n        // outerHeight and outerWidth外部宽高\r\n        //margin 等于true:把margin算进去，等于false不算margin\r\n        iptv.fn[\"outer\" + name] = function (margin) {\r\n            if (!this[0]) {\r\n                return null;\r\n            }\r\n            //元素外部高度=padding-top + height + padding-bottom + border-top-width + border-bottom-width\r\n            return this[\"inner\" + name]() + parseInt(this.getStyle(\"border-\"+tl+\"-width\")) + parseInt(this.getStyle(\"border-\"+br+\"-width\")) + (margin ? (parseInt(this.getStyle(\"margin-\"+tl)) + parseInt(this.getStyle(\"margin-\"+br))) : 0);\r\n        };\r\n\r\n    });\r\n\r\n    //定义ajax模块\r\n    function createXHR() {\r\n        if (typeof XMLHttpRequest != \"undefined\") { // 非IE6浏览器\r\n            return new XMLHttpRequest();\r\n        } else if (typeof ActiveXObject != \"undefined\") {   // IE6浏览器\r\n            var version = [\"MSXML2.XMLHttp.6.0\", \"MSXML2.XMLHttp.3.0\", \"MSXML2.XMLHttp\",];\r\n            for (var i = 0; i < version.length; i++) {\r\n                try {\r\n                    return new ActiveXObject(version[i]);\r\n                } catch (e) {\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    iptv.extend({\r\n        ajax: function (obj) {\r\n            obj = obj || {};\r\n            obj.method = obj.method.toUpperCase() || 'POST';\r\n            obj.url = obj.url || '';\r\n            obj.url += obj.url.indexOf(\"?\") == -1 ? \"?rand=\" + Math.random() : \"&rand=\" + Math.random();\r\n            obj.data = obj.data || {};\r\n            obj.async = obj.async || true;\r\n            obj.success = obj.success || function () {\r\n            };\r\n            obj.error = obj.error || function () {\r\n            };\r\n            var params = [];\r\n            for (var key in obj.data) {\r\n                if (iptv.isNull(obj.data[key])) {\r\n                    continue;\r\n                }\r\n                params.push(key + \"=\" + obj.data[key]);\r\n            }\r\n            var postData = params.join(\"&\");\r\n            var xhr = createXHR();\r\n            if (obj.method === \"POST\") {\r\n                xhr.open(obj.method, obj.url, obj.async);\r\n                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded;charset=utf-8');\r\n                xhr.send(postData);\r\n            } else if (obj.method === \"GET\") {\r\n                xhr.open(obj.method, obj.url + '&' + postData, obj.async);\r\n                xhr.send(null);\r\n            }\r\n            xhr.onreadystatechange = function () {\r\n                if (xhr.readyState == 4 && xhr.status == 200) {\r\n                    if (xhr.responseText) {\r\n                        var responseObj = eval(\"(\" + xhr.responseText + \")\");\r\n                        //登陆失效\r\n                        if (responseObj && responseObj.code == 1001) {\r\n                            window.location.href = iptv.config.ErrorLoginFailUrl;\r\n                        } else if (responseObj == null || responseObj == \"\" || responseObj.code == null) {\r\n                            window.location.href = iptv.config.ErrorServerFailUrl;\r\n                        } else {\r\n                            obj.success(xhr.responseText);\r\n                        }\r\n\r\n                    }\r\n\r\n                } else if (xhr.readyState == 4 && xhr.status != 200) {\r\n                    obj.error(xhr.status, xhr.statusText);\r\n                }\r\n            };\r\n        }\r\n    });\r\n\r\n    if (typeof module === \"object\" && module && typeof module.exports === \"object\") {\r\n        module.exports = iptv;\r\n    } else {\r\n        if (typeof define === \"function\" && define.amd) {\r\n            define(\"iptv\", [], function () {\r\n                return iptv;\r\n            });\r\n        }\r\n    }\r\n\r\n    if (typeof window === \"object\" && typeof window.document === \"object\") {\r\n        window.iptv = window.$ = iptv;\r\n    }\r\n})(window);\r\n\r\n(function (window, iptv) {\r\n    if (!iptv) {\r\n        console.error(\"缺少iptv核心库文件\");\r\n        return;\r\n    }\r\n\r\n    var ready = {\r\n        //全局配置\r\n        config: {\r\n            skin: 'iptv-dialogs',\r\n            shade: 0.3,//遮罩层,\r\n            winWidth:1280,\r\n            winHeight:720\r\n        },\r\n        //用于缓存所有关闭回调函数\r\n        end: {},\r\n        //所有弹框类型\r\n        type: [\"info\",\"tips\",\"page\"],\r\n        //用于缓存所有弹框对象\r\n        dialogs:{},\r\n        anim: ['iptv-anim-00', 'iptv-anim-01', 'iptv-anim-02', 'iptv-anim-03', 'iptv-anim-04', 'iptv-anim-05', 'iptv-anim-06']\r\n    };\r\n\r\n\r\n    function Dialog(setings) {\r\n        var that = this;\r\n        that.index = ++dialogs.index;\r\n        //缓存弹框对象\r\n        ready.dialogs[that.index] = that;\r\n        //配置优先级：总配置<当前对象配置<用户自定义配置\r\n        that.config = iptv.extend({}, ready.config, that.config, setings);\r\n        //如果用户没有指定皮肤，默认制空\r\n        that.config.skin = that.config.skin === ready.config.skin ? \"\" : that.config.skin;\r\n        document.body ? that.creat() : setTimeout(function () {\r\n            that.creat();\r\n        }, 50);\r\n    }\r\n\r\n    Dialog.pt = Dialog.prototype;\r\n\r\n    //弹框私有配置\r\n    Dialog.pt.config = {\r\n        type: ready.type[0],//默认info 信息\r\n        time: 3000, //0表示不自动关闭\r\n        zIndex: 19891014,//dom元素zIndex值\r\n        maxWidth: 360,//最大宽度\r\n        fixed: true,//固定\r\n        anim: 0,//默认动画\r\n        isOutAnim: true,//是否添加退出动画\r\n        icon: -1,//表情\r\n        title:\"信息\",\r\n        area: 'auto',//坐标\r\n        offset: 'auto',\r\n        tips: 2,//弹框默认位置在右边\r\n        start:null,//弹框显示后回调函数\r\n        end:null,//弹框关闭后回调函数\r\n    };\r\n\r\n    /**\r\n     * 创建弹框\r\n     */\r\n    Dialog.pt.creat = function () {\r\n        var that = this,\r\n            config = that.config,\r\n            times = that.index,\r\n            content = config.content,\r\n            conType = typeof content === 'object',\r\n            body = iptv('body')[0];\r\n\r\n        if (typeof config.area === 'string') {\r\n            config.area = config.area === 'auto' ? ['', ''] : [config.area, ''];\r\n        }\r\n\r\n        if (typeof config.shade === 'number') {\r\n            config.shade = [config.shade, '#000'];\r\n        }\r\n\r\n        //根据每种类型的弹框，处理已经打开同类型的弹框，进行关闭\r\n        switch (config.type) {\r\n            case ready.type[0]:\r\n                dialogs.closeAll(ready.type[0]);\r\n                break;\r\n            case ready.type[1]:\r\n                //如果content不是数组，这里强制转换为数组，数组第一个元素为实际内容，第二个元素为依附元素选择器\r\n                conType || (config.content = [config.content, 'body']);\r\n                //依附元素选择器\r\n                config.follow = config.content[1];\r\n                //获取依附元素的父元素对象\r\n                config.parent = iptv(config.follow)[0] && iptv(config.follow)[0].parentNode || iptv('body')[0];\r\n                //添加箭头\r\n                config.content = config.content[0] + '<i id=\"iptv-dialogs-TipsG'+that.index+'\" class=\"iptv-dialogs-TipsG\"></i>';\r\n                delete config.title;\r\n                //判断用户传递过来的tips属性是否是对象，如果是就用，如果不是这里强制转换为数组对象 [弹框方向：1上2右3下4左,弹框背景颜色]\r\n                //第2个参数为tipsG的弹框背景颜色，默认为true，目的是默认存在箭头，如果2个参数为false或者为null,将在tips方法内，tipsG被remove掉\r\n                config.tips = typeof config.tips === 'object' ? config.tips : [config.tips, true];\r\n                //如果tipsMore为true将不销毁之前的\r\n                config.tipsMore || dialogs.closeAll('tips');\r\n                break;\r\n        }\r\n\r\n        //创建DOM,并且自适应\r\n        that.vessel(function (shadeHTML, contentHTML) {\r\n            shadeHTML && body.appendChild(shadeHTML);\r\n            if(config.type == ready.type[1]){\r\n                //如果是tips弹框，节点需要创建在依附元素的父元素内\r\n                config.parent.appendChild(contentHTML);\r\n            }else{\r\n                contentHTML && body.appendChild(contentHTML);\r\n            }\r\n            that.dialog = $('#' + ready.config.skin + times);\r\n        }).auto(times);\r\n\r\n        //如果有遮罩，设置遮罩样式\r\n        iptv('#iptv-shade' + that.index).setCss({\r\n            'background-color': config.shade[1] || '#000',\r\n            'opacity': config.shade[0] || ready.config.shade\r\n        });\r\n\r\n        //坐标自适应浏览器窗口尺寸\r\n        config.type == ready.type[1] ? that.tips() : that.offset();\r\n\r\n        //添加弹出动画,支持使用内置已经定义好的动画，同时支持外部扩展动画\r\n        if (ready.anim[config.anim] || typeof config.anim === 'string') {\r\n            var animClass = typeof config.anim === 'string' ? config.anim : 'iptv-anim ' + ready.anim[config.anim];\r\n            that.dialog.addClass(animClass).one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function (a) {\r\n                $(this).removeClass(animClass);\r\n            });\r\n        }\r\n\r\n        //根据配置时长，延迟几秒后关闭弹框\r\n        config.time <= 0 || setTimeout(function () {\r\n            dialogs.close(that.index);\r\n        }, config.time);\r\n\r\n        //记录关闭动画\r\n        if (config.isOutAnim) {\r\n            that.dialog.data('isOutAnim', true);\r\n        }\r\n\r\n        //执行打开回调\r\n        config.start && config.start.call(that,times);\r\n\r\n        //添加退出回调\r\n        config.end && (ready.end[that.index] = config.end);\r\n    };\r\n    /**\r\n     * 自适应\r\n     */\r\n    Dialog.pt.auto = function () {\r\n        var that = this, config = that.config, dialog = that.dialog;\r\n        if(config.area[0] === '' && config.maxWidth > 0){\r\n            dialog.outerWidth() > config.maxWidth && dialog.width(config.maxWidth);\r\n        }\r\n        var area = [dialog.innerWidth(), dialog.innerHeight()]\r\n            ,titHeight = iptv(\"#iptv-dialogs-title\"+that.index).outerHeight() || 0\r\n            ,setHeight = function(elem){\r\n            elem = iptv(elem);\r\n            elem.height(area[1] - titHeight - 2*(parseFloat(elem.getStyle(\"padding-top\")) || 0 ));\r\n        };\r\n\r\n        //如果是默认宽高\r\n        if(config.area[1] === ''){\r\n            //如果内容高度超过屏幕最大高度，做出限制\r\n            if(config.fixed && area[1] >= ready.config.winHeight){\r\n                area[1] = ready.config.winHeight;\r\n                setHeight('#iptv-dialogs-content'+that.index);\r\n            }\r\n        } else {\r\n            //如果是用户指定宽高\r\n            setHeight('#iptv-dialogs-content'+that.index);\r\n        }\r\n\r\n        return that;\r\n    };\r\n    /**\r\n     * 计算坐标\r\n     */\r\n    Dialog.pt.offset = function(){\r\n        var that = this, config = that.config, dialog = that.dialog;\r\n        var area = [dialog.outerWidth(), dialog.outerHeight()];\r\n        var type = typeof config.offset === 'object';\r\n        //首先计算弹框默认位置在屏幕中间\r\n        that.offsetTop = (ready.config.winHeight - area[1])/2 + (ready.config.winHeight - area[1])/4;\r\n        that.offsetLeft = (ready.config.winWidth- area[0])/2;\r\n\r\n        //用户设置弹框坐标有两种方式，\r\n        // 1）以[数值,数值]数组方式设置top,left   \r\n        // 2）以字符串t,r,b,l,lt,lb,rt,rb,数值\r\n        // 3）数值可以是百分比字符串，可以是数字\r\n\r\n        //如果用户指定坐标\r\n        if(type){\r\n            that.offsetTop = config.offset[0];\r\n            that.offsetLeft = config.offset[1] || that.offsetLeft;\r\n        } else if(config.offset !== 'auto'){\r\n            //如果坐标是字符串，覆盖指定位置坐标\r\n            if(config.offset === 't'){ //上中\r\n                that.offsetTop = 0;\r\n            } else if(config.offset === 'r'){ //右中\r\n                that.offsetLeft = ready.config.winWidth - area[0];\r\n            } else if(config.offset === 'b'){ //下中\r\n                that.offsetTop = ready.config.winHeight - area[1];\r\n            } else if(config.offset === 'l'){ //左中\r\n                that.offsetLeft = 0;\r\n            } else if(config.offset === 'lt'){ //左上角\r\n                that.offsetTop = 0;\r\n                that.offsetLeft = 0;\r\n            } else if(config.offset === 'lb'){ //左下角\r\n                that.offsetTop = ready.config.winHeight - area[1];\r\n                that.offsetLeft = 0;\r\n            } else if(config.offset === 'rt'){ //右上角\r\n                that.offsetTop = 0;\r\n                that.offsetLeft = ready.config.winWidth - area[0];\r\n            } else if(config.offset === 'rb'){ //右下角\r\n                that.offsetTop = ready.config.winHeight - area[1];\r\n                that.offsetLeft = ready.config.winWidth - area[0];\r\n            } else {\r\n                //如果没有匹配的，默认设置弹框距离顶部的垂直距离，也就是说，弹框水平居中\r\n                that.offsetTop = config.offset;\r\n            }\r\n\r\n        }\r\n\r\n        //如果不是固定布局\r\n        if(!config.fixed){\r\n            //如果用户指定弹框的垂直距离为一个百分比\r\n            that.offsetTop = /%$/.test(that.offsetTop) ?\r\n                ready.config.winHeight * parseFloat(that.offsetTop) /100\r\n                : parseFloat(that.offsetTop);\r\n\r\n            that.offsetLeft = /%$/.test(that.offsetLeft) ?\r\n                ready.config.winWidth * parseFloat(that.offsetLeft)/100\r\n                : parseFloat(that.offsetLeft);\r\n        }\r\n\r\n        dialog.setCss({top: that.offsetTop + \"px\", left: that.offsetLeft + \"px\"});\r\n        return that;\r\n    };\r\n    /**\r\n     * 创建节点\r\n     * @param callBack\r\n     * @returns {Dialog.pt}\r\n     */\r\n    Dialog.pt.vessel = function (callBack) {\r\n        var that = this, times = that.index, config = that.config;\r\n        var zIndex = config.zIndex + times;\r\n        var titleHTML = null;\r\n        if (config.title) {\r\n            titleHTML = document.createElement(\"div\");\r\n            titleHTML.setAttribute(\"id\", \"iptv-dialogs-title\" + times);\r\n            titleHTML.id = \"iptv-dialogs-title\" + times;\r\n            titleHTML.className = \"iptv-dialogs-title\";\r\n            titleHTML.innerHTML = config.title;\r\n        }\r\n\r\n        //如果内容是一个DOM节点，需要记录该DOM节点的父容器,同时将该DOM设置为显示状态\r\n        if(config.content && config.content.nodeType === 1){\r\n            iptv(config.content).show().setCss(\"display\",\"block\").data(\"parentNode\",config.content.parentNode);\r\n        }\r\n\r\n        config.zIndex = zIndex;\r\n        //遮罩\r\n        var shadeHTML = null;\r\n        if (config.shade) {\r\n            shadeHTML = document.createElement(\"div\");\r\n            shadeHTML.className = \"iptv-shade\";\r\n            shadeHTML.setAttribute(\"id\", \"iptv-shade\" + times);\r\n            shadeHTML.setAttribute(\"times\", times);\r\n            shadeHTML.id = \"iptv-shade\" + times;\r\n            shadeHTML.style.zIndex = zIndex - 1;\r\n            shadeHTML.innerHTML = '';\r\n        }\r\n\r\n\r\n        //主体内容\r\n        var contentHTML = null;\r\n\r\n        //创建内容父容器\r\n        contentHTML = document.createElement(\"div\");\r\n        // iptv-dialogs iptv-dialogs-tips 用户自定义皮肤\r\n        contentHTML.className = ready.config.skin + ' ' + ready.config.skin + '-' + config.type + ' ' + config.skin;\r\n        contentHTML.setAttribute(\"id\", ready.config.skin + times);\r\n        contentHTML.setAttribute(\"type\", config.type);\r\n        contentHTML.setAttribute(\"times\", times);\r\n        contentHTML.setAttribute(\"showtime\", config.time);\r\n        contentHTML.id = ready.config.skin + times;\r\n        contentHTML.style.zIndex = zIndex;\r\n        contentHTML.style.width = config.area[0]+\"px\";\r\n        contentHTML.style.height = config.area[1]+\"px\";\r\n        !config.fixed && (contentHTML.style.position = \"absolute\");\r\n        //如果有标题，添加标题\r\n        titleHTML && contentHTML.appendChild(titleHTML);\r\n\r\n        //创建内容\r\n        var content = document.createElement(\"div\");\r\n        content.setAttribute(\"id\", (config.id || 'iptv-dialogs-content'+times));\r\n        content.id = config.id || 'iptv-dialogs-content'+times;//设置内容容器id，该id可以是用户指定的id，也可以是默认生成id\r\n        content.className = \"iptv-dialogs-content\" + ((config.type == ready.type[0] && config.icon !== -1) ? ' iptv-dialogs-padding' : '');\r\n        var innerHTML = '';\r\n        //type等于info 并且有icon,这里添加icon元素\r\n        (config.type == ready.type[0] && config.icon !== -1) && (innerHTML = '<i class=\"iptv-dialogs-ico iptv-dialogs-ico' + config.icon + '\"></i>');\r\n        //如果用户传递的内容是一个字符串，不是DOM，将以字符串的方式添加\r\n        innerHTML += (config.content && config.content.nodeType === 1 ? \"\" : (typeof config.content === \"string\" ? config.content : \"\"));\r\n        content.innerHTML = innerHTML;\r\n        //如果用户传递的内容是一个DOM，将以子节点的方式添加\r\n        config.content && config.content.nodeType === 1 && (content.appendChild(config.content))\r\n        //非page弹框，计算高度\r\n        if(config.type !== ready.type[2] && innerHTML.length>0){\r\n            //每20个字符一行，每行高度为21，计算总的高度\r\n            content.style.height  = (Math.ceil(innerHTML.length/20)*24) + \"px\";\r\n        }else if(config.area[1] === ''){\r\n            //page弹框，高度固定为默认屏幕高度\r\n            content.style.height =ready.config.winHeight+\"px\";\r\n        }else{\r\n            content.style.height =config.area[1]+\"px\";\r\n        }\r\n        //将内容添加到父容器内\r\n        contentHTML.appendChild(content);\r\n\r\n        callBack && callBack.call(that, shadeHTML, contentHTML);\r\n        return that;\r\n    };\r\n    /**\r\n     * Tips\r\n     */\r\n    Dialog.pt.tips = function(){\r\n        var that = this, config = that.config, dialog = that.dialog, offset = config.offset, is = typeof offset === \"object\";\r\n        var layArea = [dialog.outerWidth(), dialog.outerHeight()], follow = iptv(config.follow);\r\n        if(!follow[0]) follow = iptv('body');\r\n        var goal = {\r\n            width: follow.outerWidth(),\r\n            height: follow.outerHeight(),\r\n            top: parseInt(follow.attr(\"top\")),\r\n            left: parseInt(follow.attr(\"left\")),\r\n            parent:config.parent,//依附元素父元素\r\n        }, tipsG = iptv('#iptv-dialogs-TipsG'+that.index);\r\n\r\n        var guide = config.tips[0];\r\n        config.tips[1] || tipsG.remove();\r\n\r\n        goal.parentHeight = $(goal.parent).height();//依附元素父元素的高\r\n        goal.parentWidth = $(goal.parent).width();//依附元素父元素的宽\r\n        goal.autoLeft = function(){\r\n            //如果依附元素的left值+弹框的宽-720  大于0，相当于弹框的坐标left值超出了屏幕宽度\r\n            if(goal.left + layArea[0] - goal.parentWidth > 0){\r\n                //弹框的left值 = 依附元素的left + 依附元素的宽 - 弹框的宽  ， 相当于将弹框完整的呈现在屏幕宽度以内\r\n                goal.tipLeft = goal.left + goal.width - layArea[0];\r\n                tipsG.setCss({right: 12+\"px\", left: 'auto'});\r\n            } else {\r\n                //如果弹框的坐标left在屏幕宽度以内，弹框的left值就等于依附元素的left值\r\n                goal.tipLeft = goal.left;\r\n            }\r\n        };\r\n\r\n        //辨别tips的方位\r\n        goal.where = [function(){ //上        \r\n            goal.autoLeft();\r\n            //弹框top值 = 依附元素的top值 - 弹框的高 - 10\r\n            goal.tipTop = goal.top - layArea[1] - 10;\r\n            //添加箭头的样式\r\n            tipsG.removeClass('iptv-dialogs-TipsB').addClass('iptv-dialogs-TipsT').setCss('border-right-color', config.tips[1]);\r\n        }, function(){ //右\r\n            //弹框的left值 = 依附元素的left值 + 依附元素的宽度 + 10\r\n            goal.tipLeft = goal.left + goal.width + 10;\r\n            //弹框的top值 = 依附元素的top值\r\n            goal.tipTop = goal.top;\r\n            tipsG.removeClass('iptv-dialogs-TipsL').addClass('iptv-dialogs-TipsR').setCss('border-bottom-color', config.tips[1]);\r\n        }, function(){ //下\r\n            goal.autoLeft();\r\n            //弹框的top值 = 依附元素的top值 + 依附元素的高 + 10\r\n            goal.tipTop = goal.top + goal.height + 10;\r\n            tipsG.removeClass('iptv-dialogs-TipsT').addClass('iptv-dialogs-TipsB').setCss('border-right-color', config.tips[1]);\r\n        }, function(){ //左\r\n            //弹框的left值 = 依附元素的left - 弹框的宽 - 10 \r\n            goal.tipLeft = goal.left - layArea[0] - 10;\r\n            //弹框的top值 = 依附元素的top值\r\n            goal.tipTop = goal.top;\r\n            tipsG.removeClass('iptv-dialogs-TipsR').addClass('iptv-dialogs-TipsL').setCss('border-bottom-color', config.tips[1]);\r\n        }];\r\n\r\n        //获取弹框坐标，并且设置箭头样式\r\n        goal.where[guide-1]();\r\n\r\n        /* 10*2为小三角形占据的空间 */\r\n        //弹框超出屏幕边缘的异常处理\r\n        if(guide === 1){\r\n            //弹框在上\r\n            //依附元素的top值 - （弹框高+箭头高） 小于0 ：说明弹框超出了屏幕顶端，自动将方向改为依附元素下方\r\n            goal.top - (layArea[1] + 10*2) < 0 && goal.where[2]();\r\n        } else if(guide === 2){\r\n            //弹框在右\r\n            //屏幕宽 - （依附元素left值 + 依附元素宽度 + 弹框宽 + 箭头宽）小于 0 ：说明弹框超出了屏幕宽度，自动将方向改为依附元素左边\r\n            goal.parentWidth - (goal.left + goal.width + layArea[0] + 10*2) > 0 || goal.where[3]()\r\n        } else if(guide === 3){\r\n            //弹框在下\r\n            //（依附元素top值 + 依附元素高 + 弹框高 + 箭头高） - 屏幕高度 大于 0 ：说明弹框超出了屏幕高度，自动将方向改为依附元素上边\r\n            (goal.top  + goal.height + layArea[1] + 10*2) - goal.parentHeight > 0 && goal.where[0]();\r\n        } else if(guide === 4){\r\n            //弹框在左\r\n            //弹框宽度 + 箭头宽度 - 依附元素的left值 大于 0 ： 说明依附元素左边放不下弹框，自动将方向改为依附元素右边\r\n            layArea[0] + 10*2 - goal.left > 0 && goal.where[1]()\r\n        }\r\n\r\n        //设置弹框背景色\r\n        iptv(config.id && '#'+config.id || '#iptv-dialogs-content'+that.index).setCss('background-color', config.tips[1]);\r\n        dialog.setCss({\r\n            left: (is && offset[1] || goal.tipLeft)+\"px\",\r\n            top: (is && offset[0] || goal.tipTop)+\"px\"\r\n        });\r\n    };\r\n\r\n\r\n    var dialogs = {\r\n        index: 0,//弹框唯一索引\r\n        getDialog:function (index) {\r\n            return ready.dialogs[index];\r\n        },\r\n        open: function (setings) {\r\n            var o = new Dialog(setings);\r\n            return o.index;\r\n        },\r\n        /**\r\n         * 信息弹框\r\n         * dialogs.msg(\"内容\");信息弹框，默认没有动画，没有标题，没有icon,延迟3秒消失\r\n         * dialogs.msg(\"内容\",{time:0,area:[宽，高],shade:[0.8,\"#000\"],});设置显示宽高，不自动关闭,添加遮罩层透明度与背景色\r\n         * dialogs.msg(\"内容\",{offset:[top值,left值]});//设置坐标\r\n         * dialogs.msg(\"内容\",{offset:\"lt\"});//设置坐标显示在左上角\r\n         * dialogs.msg(\"内容\",{title:\"标题\"});//添加标题\r\n         * dialogs.msg(\"内容\",{anim:2});//设置内置动画\r\n         * dialogs.msg(\"内容\",{anim:\"bounceInDown\"});//设置自定义动画\r\n         * dialogs.msg(\"内容\",{icon:2});//设置图标\r\n         * @param content\r\n         * @param options\r\n         * @param end\r\n         * @returns {*}\r\n         */\r\n        msg: function (content, options, end) {\r\n            var type = typeof options === 'function';\r\n            if (type) end = options;\r\n            options = options || {};\r\n            return dialogs.open(iptv.extend({\r\n                content: content,\r\n                time: 3000,\r\n                shade: false,\r\n                title: false,\r\n                end: end\r\n            }, (!type ? options : {})));\r\n        },\r\n        /**\r\n         * tips弹框，带箭头\r\n         * dialogs.tips(\"内容\",\"依附元素选择器\");默认显示在元素右侧，延迟3秒消失，背景色为黑色\r\n         * dialogs.tips(\"内容\",\"依附元素选择器\",{time:0});默认显示在元素右侧，不自动消失，背景色为黑色\r\n         * dialogs.tips(\"内容\",\"依附元素选择器\",{tipsMore:true});弹框后，不删除之前的tips，也就是允许同时存在多个tips存在\r\n         * dialogs.tips(\"内容\",\"依附元素选择器\",{tips:[1,\"red\"]});控制方向显示在元素上方，同时背景色为红色，不再使用默认背景色与方向\r\n         * dialogs.tips(\"内容\",\"依附元素选择器\",{tips:[3,\"red\"],offset:[100,200]});控制方向显示在元素下方，同时背景色为红色，由于加上offset属性，不再自动计算tips坐标，使用用户指定坐标\r\n         * dialogs.tips(\"内容\",\"依附元素选择器\",{offset:[100,200]});默认方向显示在元素右侧，如果加上offset属性，在显示在右侧的同时，不自动计算tips坐标，使用用户指定坐标\r\n         * offset:该坐标属性一般会在dialogs插件自动计算出来的位置不满足用户需求时，此时可以通过该值设置自定义坐标，如下：\r\n         * dialogs.tips(\"内容\",\"依附元素选择器\",{time:0,tips:[4,\"black\"],offset:[top值,left值]});\r\n         * @param content\r\n         * @param follow\r\n         * @param options\r\n         * @returns {*}\r\n         */\r\n        tips: function(content, follow, options){\r\n            return dialogs.open(iptv.extend({\r\n                type: ready.type[1],\r\n                content: [content, follow],\r\n                time: 3000,\r\n                shade: false,\r\n                fixed: false,\r\n                title: false,\r\n                maxWidth: 210\r\n            }, options));\r\n        },\r\n        closeAll: function (type) {\r\n\r\n            //根据顶级css名找到所有dialogs elem元素\r\n            iptv.each(iptv(\".\" + ready.config.skin), function () {\r\n                //遍历所有dialogs 元素\r\n                var othis = iptv(this);\r\n                //判断type属性是否为指定关闭的type\r\n                var is = type ? (othis.attr('type') === type) : true;\r\n                //如果type是指定关闭的info , 就调用关闭方法，传递dialogs的index索引值过去\r\n                is && dialogs.close(othis.attr('times'));\r\n            });\r\n        },\r\n        close: function (index) {\r\n            var dialog = iptv('#' + ready.config.skin + index);\r\n            if(!dialog[0] || !ready.dialogs[index]) return;\r\n            var type = dialog.attr('type'),\r\n                closeAnim = 'iptv-anim-close',dlg = ready.dialogs[index],config = dlg.config, content = config.content;\r\n            //定义移除dom元素方法\r\n            var remove = function () {\r\n                //如果被删除的弹框是一个自定义的DOM节点，此时就不能将该节点移除了，需要将其还原到一开始的父节点下，并且显示状态也还原为隐藏\r\n                if(type === ready.type[2] && content && content.nodeType === 1){\r\n                    //将自定义内容DOM在弹框内移除\r\n                    iptv(\"#iptv-dialogs-content\"+index)[0].removeChild(content);\r\n                    //将自定义内容DOM还原显示状态为隐藏，同时，将DOM还原到之前的父节点下\r\n                    iptv(content).hide().setCss(\"display\",\"none\").data(\"parentNode\").appendChild(content);\r\n                }\r\n                dialog[0].innerHTML = '';\r\n                //移除元素\r\n                dialog.remove();\r\n                //判断是否存在关闭dialogs的回调，如果存在就执行\r\n                typeof ready.end[index] === 'function' && ready.end[index].call(dlg,index);\r\n                //删除回调\r\n                delete ready.end[index];\r\n                //删除弹框对象\r\n                delete ready.dialogs[index];\r\n            };\r\n\r\n            //如果开启退出动画，需要动画执行完成之后，再退出\r\n            if (dialog.data('isOutAnim')) {\r\n                //如果开启了关闭动画，先给dialogs元素添加关闭动画样式，\r\n                //并且指定动画执行结束时间后执行移除元素方法\r\n                dialog.addClass('iptv-anim ' + closeAnim).one(\"webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend\", function () {\r\n                    //动画结束，移除弹框元素\r\n                    remove();\r\n                });\r\n                //如果不支持.one方法的话，可以使用如下方法\r\n                /*dialog.addClass('iptv-anim ' + closeAnim);\r\n                 setTimeout(function(){\r\n                 remove();\r\n                 }, 200);*/\r\n            } else {\r\n                //如果没有设置关闭动画，直接退出\r\n                remove();\r\n            }\r\n            //移除遮罩层\r\n            iptv('#iptv-shade' + index).remove();\r\n\r\n        }\r\n    };\r\n\r\n    iptv.dialogs = dialogs;\r\n    window.dialogs = dialogs;\r\n\r\n\r\n})(window, iptv);\r\n\r\n(function (window, iptv) {\r\n    if (!iptv) {\r\n        console.error(\"缺少iptv核心库文件\");\r\n        return;\r\n    }\r\n\r\n    function IMGLoad(){\r\n        //解决IE在setInterval中无法传入回调参数的问题\r\n        if (document.all && !window.setInterval.isPolyfill) {\r\n            var __nativeSI__ = window.setInterval;\r\n            /*, argumentToPass1, argumentToPass2, etc. */\r\n            window.setInterval = function (vCallback, nDelay ) {\r\n                var aArgs = Array.prototype.slice.call(arguments, 2);\r\n                return __nativeSI__(vCallback instanceof Function ? function () {\r\n                    vCallback.apply(null, aArgs);\r\n                } : vCallback, nDelay);\r\n            };\r\n            window.setInterval.isPolyfill = true;\r\n        }\r\n\r\n        //图片个数\r\n        this.imgCount = 0;\r\n        //遍历索引\r\n        this.imgIndex = 0;\r\n        //图片数组\r\n        this.imgs = new Array();\r\n        //计时器\r\n        this.imgTimer = 0;\r\n        //回调\r\n        this.callBack = null;\r\n        this.ImgLoadSuss = function(obj_,callBack_)\r\n        {\r\n            if(!obj_)return;\r\n            var this_ = this;\r\n            if(iptv.isArray(obj_))\r\n            {\r\n                this_.imgs = obj_;\r\n                this_.imgCount = obj_.length;\r\n            }else{\r\n                this_.imgCount = 1;\r\n                this_.imgs.push(obj_);\r\n            }\r\n            this_.callBack = callBack_;\r\n            this_.imgTimer  = setInterval(function(th){\r\n                for(var i in th.imgs)\r\n                {\r\n                    if(th.imgs[i].complete && th.imgs[i].loadOk == undefined)\r\n                    {\r\n                        th.imgs[i].loadOk = true;\r\n                        th.imgIndex = th.imgIndex + 1;\r\n                    }\r\n                    if(th.imgIndex === th.imgCount && th.callBack)\r\n                    {\r\n                        clearInterval(th.imgTimer);\r\n                        th.callBack(th.imgs);\r\n                    }\r\n                }\r\n            },50,this_);\r\n        };\r\n    };\r\n    iptv.fn.extend({\r\n        loadImg:function(callBack_){\r\n            if(iptv.type(this.context) !== \"array\" || this.context.length===0  || !(this.context[0] instanceof Image))return;\r\n            (new IMGLoad()).ImgLoadSuss(this.context,callBack_);\r\n            return this;\r\n        }\r\n    });\r\n\r\n})(window,iptv);","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n"],"sourceRoot":""}