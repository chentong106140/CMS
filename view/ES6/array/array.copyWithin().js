
$(function () {

    console.log("----------------------copyWithin()-------------------------");
    var a1 = [0,1,2,3,4,5,6,7,8,9];
    var a2 = a1.copyWithin(2,5,2);  //从索引2的位置开始被覆盖，从索引5（从0开始）的位置开始复制，从索引2结束（从1开始）
    console.log(a1);//Array [0,1,2,3,4,5,6,7,8,9];
    console.log(a2);//Array [0,1,2,3,4,5,6,7,8,9];

    //总结：结束位置的索引是从1开始的，并不是取复制的长度，如果结束位置的索引值比开始位置的值小的话，就会不起作用

    var a1 = [0,1,2,3,4,5,6,7,8,9];
    var a2 = a1.copyWithin(2,5,7);  //从索引2的位置开始被覆盖，从索引5（从0开始）的位置开始复制，从索引7结束（从1开始）
    console.log(a1);//Array [ 0, 1, 5, 6, 4, 5, 6, 7, 8, 9 ]
    console.log(a2);//Array [ 0, 1, 5, 6, 4, 5, 6, 7, 8, 9 ]
    //总结：结束位置的索引值是从1开始算，如案例，索引7，也就是数组第七个元素结束

    a1 = [0,1,2,3,4,5,6,7,8,9];
    a1.copyWithin(0,0); //从索引0开始被覆盖，从索引0开始复制，复制长度为数组整个长度
    console.log(a1);    // Array [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]

    a1 = [0,1,2,3,4,5,6,7,8,9];
    a1.copyWithin(5,0); //从索引5开始被覆盖，从索引0开始复制，复制长度为数组整个长度
    console.log(a1);//Array [ 0, 1, 2, 3, 4, 0, 1, 2, 3, 4 ] ，发现索引5的位置开始被覆盖了，并且数组整个长度length并没有变动





});
