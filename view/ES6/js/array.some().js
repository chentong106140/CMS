
$(function () {
    console.log("----------------------some()-------------------------");
    //用于演示替换回调函数内的this值
    var obj = [1,2,3,4,5];

    var a = [11,22,33,44,55,66,77];
    var b = a.some(function(num,index,array){
        console.log(num,index,array,this);
        return num > 10;
    },obj);
    //输出：
    //11 0 Array [ 11, 22, 33, 44, 55, 66, 77 ] Array [ 1, 2, 3, 4, 5 ]

    console.log(b); //true
    //总结：
    // 如果数组内存在一个符合指定条件的元素，就直接返回true，那么，剩余的其他元素都不会再遍历
    //通过输出结果可以看出，传递了obj对象，就会替换回调函数内的this对象
    //回调函数内的3个参数分别为：当前遍历的元素，当前元素的索引，当前遍历的数组



    var c = a.some(function(num,index,array){
        console.log(num,index,array,this);
        return num > 100;
    },obj);
    //输出：
    //11   0   Array [ 11, 22, 33, 44, 55, 66, 77 ]    Array [ 1, 2, 3, 4, 5 ]
    //22   1   Array [ 11, 22, 33, 44, 55, 66, 77 ]    Array [ 1, 2, 3, 4, 5 ]
    //33   2   Array [ 11, 22, 33, 44, 55, 66, 77 ]    Array [ 1, 2, 3, 4, 5 ]
    //44   3   Array [ 11, 22, 33, 44, 55, 66, 77 ]    Array [ 1, 2, 3, 4, 5 ]
    //55   4   Array [ 11, 22, 33, 44, 55, 66, 77 ]    Array [ 1, 2, 3, 4, 5 ]
    //66   5   Array [ 11, 22, 33, 44, 55, 66, 77 ]    Array [ 1, 2, 3, 4, 5 ]
    //77   6   Array [ 11, 22, 33, 44, 55, 66, 77 ]    Array [ 1, 2, 3, 4, 5 ]
    console.log(c);//false
    //总结：如果数组内都没有符合指定条件的元素，将会遍历所有元素，同时整个表达式将返回false
    
    //与every()方法的区别
    //some()方法是检测数组是否存在一个符合指定条件的元素就返回true,如果有一个符合条件的，剩下的元素将不会再遍历
    //every()方法是检测数组所有元素都要符合指定条件才会返回true，如果有一个不符合条件的，剩下的元素将不会再遍历
});
