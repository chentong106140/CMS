@charset "utf-8";
//插值    https://www.imooc.com/code/7042

/**
    我们有些时候，需要将变量与其他字符进行拼接，此时插值就起到作用了
 */

/**
    一：插值的案例1
      拼接属性名
 */
$properties:(margin,padding);   // 定义一个字符列表，可以理解为一个数组

@mixin set-value($key,$value){    //定义一个混合宏，指定2个参数，第一个参数用于拼接字符，第二个参数为属性值
  @each $prop in $properties{   //通过循环遍历$properties这个列表，相当于分别遍历margin与padding
    #{$prop}-#{$key}:$value;  //通过#{}调用变量进行拼接字符，本案例，将2个变量进行了拼接，也就是将margin与参数$key进行了拼接
  }
}

.login-box{
  @include set-value(top,5px);
}

/**
    插值的案例2
        拼接样式名
 */
@mixin generate-sizes($class, $small, $medium, $big) {  //定义混合宏，内部是封装的是多个选择器，注意封装的不是样式，第一个参数为样式名开头的名称，其他3个参数为属性值
  .#{$class}-small { font-size: $small; }   //插值拼接样式名，注意拼接的字符前面有.号，这是样式名
  .#{$class}-medium { font-size: $medium; }
  .#{$class}-big { font-size: $big; }
}

@include generate-sizes("header-text", 12px, 20px, 40px); //这边指定调用混合宏，将定义好的选择器输出在这里







/**
    二：如下是验证插值是否可以拼接变量名?

$margin-big:40px;
$size:big;

  .test1{
       margin-top:$margin-#\{$size};   本意是想拼接为$margin-big这个变量名称,但是编译报错，不可行，不可以拼接变量
    }

  @mixin test2($size){
        margin-top:$margin-#\{$size};    本意也是想要拼接为$margin-big这个变量，并，输出这个变量的值，但最终也是编译报错，不可以拼接变量
    }
*/




/**

三：如下是验证插值是否可以拼接混合宏名?

@mixin update-status{   //定义一个混合宏，用于验证是否可以通过插值，拼接这个混合宏的名称
  margin-top:20px;
}

$flag:"status";   //定义一个变量，用于拼接混合宏的名称


  .test3{
      @include  update-#\{$flag};  //这边验证下是否可以拼接混合宏的名称，目的是想要拼接为update-status
  }
  
*/




/**
      四：如下是验证插值是否可以拼接占位符名与选择器名称
      
      主要是想要实现，用户自定义的参数，来拼接具体执行哪个占位符，哪个选择器
 */

%update-status{   //定义一个占位符，用于验证插值是否可以拼接占位符名称%update-status
  .mt{
    margin-top:20px;
  }
}

.select-status{   //定义一个普通选择器，用于验证插值是否可以拼接普通选择器名称.select-status
  color:white;
}

$flag:"status";   //定义一个变量，用于存储字符名称
  


.test{  //这边注意看下，这个.test选择器，使用这个选择器的目的是为了能够在选择器内部，执行@extend关键字，如果单独在外边执行@extend，编译会报错
  @extend %update-#{$flag};   //拼接占位符名称，本意是拼接为%update-status，并将占位符内的内容复制过来

  @extend .select-#{$flag};   //拼接选择器名称，本意是拼接为.select-status，并将选择器内的内容复制过来
  
  z-index: au#{to};   //验证是否可以拼接字符串
  
  z-index: au#{'to'};//验证是否可以拼接带单引号的字符串,是可以拼接的，不过不会带上单引号
  
  animation: #{"name"}; //验证是否输出的字符中，含有双引号
  
  $name1:"name1";
  animation-name: #{$name1};  //验证是否可以输出带有双引号的字符串，验证后不可以
  animation-name: $name1;  //验证是否可以输出带有双引号的字符串，验证后，可以

  $name2:'name2';
  animation-name: #{$name2};  //验证是否可以输出带有单引号的字符串，验证后不可以
  animation-name: $name2;  //验证是否可以输出带有单引号的字符串，验证后，可以，但是不是单引号，而是双引号，sass会强制将单引号变成双引号
  
}




/**
    总结：
        1：所谓插值，其实就是拼接字符，通过取变量的值与其他字符进行拼接
        
        2：插值可以拼接：样式名，选择器名，属性值，占位符，字符串
        
        3：插值不可以拼接：变量名，混合宏的名称
        
        4：@extend继承：不可以单独写，必须只能写在选择器内，不能在全局作用域内，单独执行@extend,否则会编译失败
         
        5：插值需要拼接占位符的时候，必须要与@extend关键字，共同使用，意思为你拼接好了，我立马执行继承
        
        6：插值会将双引号或者单引号定义的字符串，都会被省略掉，直接编译为引号内部的字符
        
        7：如果需要拼接带有引号的字符串，就直接输出变量即可，无需使用插值
        
        
 */
















