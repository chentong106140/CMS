@charset "utf-8";
//混合宏 VS 继承 VS 占位符    https://www.imooc.com/code/7041


/**
    混合宏 VS 继承 VS 占位符的区别，具体区别请查看4-6hunhehong.scss，4-7jicheng.scss，4-8zhanweifu.scss
      

      混合宏
        声明方式 ：   @mixin
        调动方式 ：   @include
        使用场景 ：   如果某一个代码块需要在不同的环境下，通过传递不同的值来生成样式时，就可以通过混合宏来定义，并重复使用该代码块
        缺点    ：   如果调用了多次混合宏，编译出来的css中，会产生很多相同的代码块，显的代码冗余
        特点    ：   混合宏类似于js的函数，通过参数来拼接样式，最终通过@include调用该函数，并，返回样式


      继承
        声明方式  ： .类选择器   #id选择器
        调用方式  ： @extend
        使用场景  ： 如果某代码块不需要通过不同的值来生成样式代码块，
                    可以作为基类，通过继承（可理解为复制）的方式，将该代码块内的样式复制到其他选择器内，
                    前提是，该基类，自身也需要被编译到css中，
                    如果可能不会被其他选择器调用的话，就不需要使用类选择器继承的方式了，可以考虑占位符定义
        缺点      ： 如果该基类没有被其他选择器所继承，那么，编译后的css中，也会存在基类的代码，也显的冗余
        特点      ： 用于继承的基类，是通过类选择器声明的，它不是变量，就是普通的类选择器


      占位符%
        声明方式  : %
        调用方式  ： @extend
        使用场景  ： 占位符与继承基本一致，都是需要预先定义好基类，然后通过@extend来继承，唯一不同的是，
                    通过占位符$声明的样式块是一个变量，不是普通的类选择器，这个变量只有被其他选择器内继承了，
                    它才会被编译到css中，如果没有被继承过，该代码块不会被编译，
                    如果该样式块不管被不被其他选择器继承，都要编译到css中，可以考虑类继承的方式








 */
