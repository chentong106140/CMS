@charset "utf-8";
//混合宏


/**
    声明一个不带参数的混合宏
 */
@mixin border-radius-no{
  -webkit-border-radius: 5px;
  border-radius: 5px;
}
/**
    声明一个带一个参数的混合宏
 */
@mixin border-radius-one($radius:10px){
  -webkit-border-radius: $radius;
  border-radius: $radius;
}

/**
    声明一个带多个参数的混合宏
 */
@mixin border-radius-more($width:100px,$height:200px){
  width:$width;
  height:$height;
}

/**
     声明一个带有多个参数，并且，其中一个参数带有多个值的参数
 */
@mixin box-shadow($width:100px,$height:100px,$shadows...){//声明2个参数 与 1个参数存在多个值
  width:$width;
  height: $height;
  
  @if length($shadows) >=1 { //判断这个带有多个值的参数，是否传递至少1个或多个值
    -webkit-box-shadow: $shadows;
    box-shadow: $shadows;
  }@else{
    //如果这个参数没有传递值，如下默认定义该参数一个默认值
    $shadows: 0 0 2px rgba(#000,.25);
    -webkit-box-shadow: $shadows;
    box-shadow: $shadows;
  }
  
}




/**
    验证：
    调用一个无参数的混合宏，调用混合宏的关键字为：@include
 */
.border-radius-no{
  @include border-radius-no;
}

/**
    验证：
    调用一个有一个参数的混合宏，调用混合宏的关键字为：@include
 */
.border-radius-one{
  @include border-radius-one;//如果混合宏定义了默认参数，我们调用的时候，可以不用传参

  @include border-radius-one(100px);//上面调用是不传参，这边验证下传参
}


/**
    验证：
    调用一个有多个参数的混合宏
 */
.border-radius-more{
  @include border-radius-more;//不传递参数调用
  
  @include border-radius-more(500px,700px);//根据混合宏定义的参数顺序进行传递参数
  
}

/**
    验证：
    调用一个有多个参数，并且，带有多个值的参数的混合宏
 */
.box-shadow{
    @include box-shadow;//不传递任何参数，全部使用默认值
  
    @include box-shadow(8px,8px,0 0 1px rgba(#000,.5));//按顺序传递参数，最后一个参数只有一个值
    
    //按顺序传递，同时第3个参数，传递了3个值
    @include box-shadow(80px,80px,0 0 1px rgba(#000,.5) , 1 1 2px rgba(#000,.6) , 1 1 2px rgba(#000,.6));
}


/**
    总结：
      1:混合宏就是类似于js方法的东西，用于将多个样式通过参数拼接后，集成在一个混合宏内，输出字符串，方便多个地方调用。
      
      2:好处就是如果有一段被重复使用的样式，可以只需要声明一次，可多次调用
      
      3:声明一个混合宏需要的关键字就是 @mixin
      
      4：混合宏在有参数的情况下，可以给参数定义默认值，格式为：“参数:默认值”，
        如：@mixin border-radius-one($radius:10px){}
        
      5：混合宏可以定义多个参数
      
      6：当混合宏存在多个参数，与，多个值...的参数时，多个值的参数需要在最后定义
      
      7：@if  @else  不要忘记写@符号了
      
      8：...的作用，我个人理解的不是指传递多个参数，而是定义的某一个参数，存在多个属性值，
        一般会用在而已写多个属性值的样式内会用到，例如
        -webkit-linear-gradient(353deg,#89C027,#89C027 28%,#E96036 28%,#E96036 49%,#FEF158 49%,#FEF158 72%,#76C5EE 72%);
        这种样式属性值，就是不确定到底有多少个样式，所以...就起到这个作用了
        
      9：优点：
            复用重复代码块
            
         缺点：
            最大的不足之处是会生成冗余的代码块，注意是“生成后的代码块”是冗余的
      
 */