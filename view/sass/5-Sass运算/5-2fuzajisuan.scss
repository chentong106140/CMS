@charset "utf-8";
//复杂计算    https://www.imooc.com/code/7731

/**
      以下是验证变量计算
 */

$content-width: 720px;
$sidebar-width: 220px;
$gutter: 20px;

.container{
  width:$content-width + $sidebar-width - $gutter;  //920px;  验证多个变量一起进行计算
  
  width: $content-width+$sidebar-width; //940px; 验证+号两边没有用空格分开，照样可以计算
  
  //width:$sidebar-width-$gutter;//验证-号两边没有用空格分开，会报错：Error: Undefined variable: "$sidebar-width-".，所以减号在变量计算的时候，需要有空格分开
}

/**
      以下是验证复杂的数字运算
 */

$width:((220px + 720) - 11 * 20 ) / 12 ;  //(940-220)/12 = 720/12 = 60

.container{
  width: $width;  //60px  注意该复杂运算中，只有一个数值有单位，所以计算后的值，也就依据这个单位
}

/**
      以下是验证+号在字符串与数字同时存在的时候，拼接是如何拼接字符串的？与计算公式在一起又是什么情况？
 */

.container{
  name:"陈通" + "2019"; //"陈通2019"    这是加号两边存在空格的写法
  
  name:"陈通"+"2019";    //"陈通2019"  这是加号两边没有空格的写法，说明都可以通过+号进行字符拼接
  
  name:"陈通"+2019;     //"陈通2019";   当字符串与数值通过+号连接时，最终结果也是一个拼接好的字符串
  
  name:'陈通' + 2019;    //"陈通2019";   当字符串是单引号声明的字符串时，最终拼接的结果，也还是双引号的字符串
  
  name:"陈通" + 2019 - 27;  //"陈通2019"-27;  只要存在字符串的计算公式中，最终结果都是以字符串拼接的形式存在
  
  name:"陈通"+2019-27*2;  //"陈通2019"-54;  虽然存在字符串在计算公式中，但是存在了乘法运算，所以会先计算乘法运算再进行拼接字符串
  
  name:"陈通" + 2019 - 27 / 1;  //"陈通2019"-27/1; 在存在字符串的计算公式中，没有括号的前提下，除法运算只会以字符串的形式出现
  
  name:"陈通" + 2019 - 27 / 1 * 1;  //"陈通2019"-27;  在存在字符串的计算公式中，没有括号的前提下，除法运算在存在其他计算符号的情况下，比如乘法，就会进行触发运算
  
}

/**
      以下验证+号拼接字符还有哪些情况
 */
.contaner{
  content:"你好"+"sass";  //"你好sass";   字符串拼接正常
  
  $content:"你好" + "sass";
  content:#{$content};  //你好sass;   使用插值，输出变量的字符串的时候，不会帮我们加上双引号，所以，需要进行如下处理
  
  content:"#{$content}";  //"你好sass";   所以，插值需要最终以字符串的形式出现的话，还是需要在插值外边写上双引号
  
  z-index:au+to;  //auto;   说明+号可以将字符链接起来，主要原因是+号前面的字符没有使用引号，所以最终拼接结果就没有引号
  
  z-index:"au"+to;  //"auto";   
  // 所以总结一个道理就是：+号左边的字符有引号，右边的字符没有引号，那么最终的结果就是带有引号的字符串
  //同样的，+号左边的字符没有引号，右边的字符有引号，那么最终的结果就是不带引号的字符串
  //结论：+号拼接的字符串，最终结果是否带有引号，主要依据+号前面的字符是否带。
}







